{"version":3,"sources":["util/img/twitter.png","util/img/insta.png","util/img/fb.png","util/img/wazzap.png","util/img/nasa.jpg","util/img/impress2.jpg","util/img/weather.jpg","util/img/rocket.png","util/img/1.jpg","reducers/user.js","reducers/notification.js","store.js","apollo.js","util/localization/fi.js","util/localization/en.js","util/localization/i18n.js","components/Togglable.jsx","hooks/index.js","services/queries.js","components/Signup.jsx","components/Login.jsx","components/Header.jsx","components/Footer.jsx","components/LoadingIcon.jsx","components/UserPage.jsx","components/UserSearchField.jsx","components/UserSearch.jsx","components/Message.jsx","components/Messages.jsx","components/ChatPage.jsx","components/MainPage.jsx","components/Weather.jsx","components/Space.jsx","components/ServiceChoice.jsx","App.jsx","index.js","util/img/logo2.jpg"],"names":["module","exports","__webpack_require__","p","setUser","info","dispatch","type","data","token","username","id","level","posts","friends","reducer","state","arguments","length","undefined","action","window","localStorage","setItem","JSON","stringify","setNotification","text","style","duration","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","setTimeout","stop","_x","apply","this","combineReducers","user","userReducer","notification","notificationReducer","store","createStore","applyMiddleware","thunk","httpLink","createHttpLink","uri","wsLink","WebSocketLink","options","reconnect","authLink","setContext","_","headers","parse","getItem","_objectSpread","authorization","concat","link","split","_ref2","query","_getMainDefinition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","fi","header_services","chatpage_nolog","header_users","header_weather","header_space","header_signed","header_logout","chatpage_send","loadingicon","login_username","login_password","login_login","login_cancel","mainpage_nolog_h1","mainpage_nolog_p","mainpage_title","mainpage_h5","mainpage_li1","mainpage_li2","mainpage_li3","mainpage_carousel1_h3","mainpage_carousel1_p","mainpage_carousel2_h3","mainpage_carousel2_p","mainpage_carousel3_h3","mainpage_carousel3_p","sc_c1_header","sc_c1_title","sc_c1_p1","sc_c1_p2","sc_c1_p3","sc_c2_header","sc_c1_button","sc_c2_button","sc_c2_title","sc_c2_text","sc_c3_title","sc_c3_text","space_nolog","space_h1","space_filter1","space_filter2","space_filter2_1","space_filter2_2","space_filter3","space_filter3_1","space_filter3_2","space_accordion1","space_accordion2","space_accordion3","space_accordion4","space_filter_fail","space_days","space_hours","space_minutes","space_seconds","space_expired","toggle_log","toggle_sign","userpage_nolog","userpage_friends","userpage_username","usersearch_form_label","usersearch_form_button","usersearch_action_add","usersearch_action_remove","weather_nolog","weather_country","weather_forecast_capital","Mon","Tue","Wed","Thu","Fri","Sat","Sun","weather_avg","msg_couldnt_remove","welcome","slide1","slide2","slide3","signup_success","space_details","chat_started","userpage_posts","userpage_level","friend_added","clear","en","weather_capital","locale","document","documentElement","lang","localeChanged","includes","slice","translations","messages","memoize","method","_len2","args","Array","_key2","key","_len","vars","_key","replace","m","p1","console","warn","Togglable","React","forwardRef","props","ref","_useState","useState","_useState2","slicedToArray","toggle","setToggle","toggleVisibility","useImperativeHandle","react_default","createElement","Fragment","width","Button","size","variant","onClick","className","translate","children","defaultProps","useField","value","setValue","onChange","event","target","reset","MESSAGE_SUBSCRIPTION","gql","_templateObject","COUNTRIES","_templateObject2","REMOVE_MESSAGE","_templateObject3","GET_LAUNCH_DATA","_templateObject4","GET_WEATHER_DATA","_templateObject5","LOGIN","_templateObject6","SIGN","_templateObject7","ALL_USERS","_templateObject8","CREATE_ROOM","_templateObject9","GET_USER_INFO","_templateObject10","GET_CHATROOM_INFO","_templateObject11","ADD_FRIEND","_templateObject12","SEND_MSG","_templateObject13","ME","_templateObject14","mapDispatchToProps","connect","toggleForm","uname","pw","_useMutation","useMutation","signup","handleSign","e","_ref3","loading","preventDefault","variables","password","sent","addUser","t0","message","Form","inline","onSubmit","Control","assign","autoFocus","placeholder","userLogin","ufields","pfields","loggedUser","handleLogin","login","resetStore","maxLength","Header","history","setLocale","formToggle","createRef","current","Navbar","expand","collapseOnSelect","bg","sticky","Brand","href","as","react_router_dom","to","Image","rounded","alt","src","logo","height","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","Link","color","active","components_Togglable","components_Login","components_Signup","Text","textUnderlinePosition","push","withRouter","Footer","paddingTop","paddingBottom","bottom","backgroundColor","fb","ig","twitter","whatsapp","marginBottom","LoadingIcon","Container","minHeight","Row","Col","alignItems","justifyContent","Spinner","animation","role","UserPage","foo","me","_useQuery","useQuery","params","error","useEffect","scrollTo","createRoom","handleChat","senderId","receiverId","room","_x2","textAlign","marginTop","substring","components_LoadingIcon","borderBottom","getUserInfo","Table","map","friend","i","UserPageSearch","searchField","handleClear","focusRef","useRef","Group","Label","focus","UserSearch","addFriend","_useMutation3","handleFriendAdd","_callee2","_context2","_x3","allUsers","fluid","UserSearchField","usr","filter","toLowerCase","find","frd","disabled","Message","remove","time","Date","date","sender","xs","order","sm","span","Toast","maxWidth","overflow","onClose","toLocaleString","Body","fontSize","fontWeight","closeButton","Messages","scrollToMsg","removeMessage","msg","components_Message","ChatPage","match","setMsg","_useState3","_useState4","update","setUpdate","scrollRef","sendMsg","useCallback","scrollTop","scrollHeight","handleMessage","resp","dataInStore","readQuery","getChatroomInfo","sendMessage","writeQuery","handleKeyPress","keyCode","shiftKey","addEventListener","removeEventListener","useSubscription","onSubscriptionData","messageAdded","subscriptionData","ChatPage_objectSpread","handleRemoveMessage","_ref4","idArr","idx","indexOf","splice","display","float","users","overflowY","overflowX","position","border","components_Messages","InputGroup","Prepend","FormControl","resize","maxHeight","aria-label","MainPage","index","setIndex","direction","setDirection","lg","Carousel","activeIndex","onSelect","selectedIndex","impress","objectFit","Caption","nasa","weather","Jumbotron","marginLeft","Weather","val","setVal","forecast","setForecast","weatherData","weatherRef","getCountryData","capital","country","_data","getWeatherData","innerWidth","scrollIntoView","block","behavior","aria-describedby","md","striped","getCountries","name","c","offset","location","forecastday","day","date_epoch","Card","toDateString","Img","condition","icon","Title","getDate","getMonth","getFullYear","ListGroup","ListGroupItem","maxtemp_c","mintemp_c","avgtemp_c","Space","t","setT","rocket","scope","setFilter","_useState5","_useState6","intervalId","setIntervalId","getLaunchData","clearInterval","getTime","launchDate","missionName","element","interval","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","filterMissions","missions","msn","upcoming","rocket_name","sort","b","launch_date_unix","openCard","mission_name","Space_objectSpread","mis","v","rname","Accordion","launch","eventKey","launch_date_utc","details","rocket_id","launch_site","site_id","site_name_long","handleClick","useApolloClient","setLang","check","components_Header","Alert","react_router","exact","path","render","components_UserPage","components_UserSearch","components_MainPage","pic1","components_ServiceChoice","components_ChatPage","components_Weather","components_Space","components_Footer","ReactDOM","react_common_esm","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.927a4deb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twitter.1841e14c.png\";","module.exports = __webpack_public_path__ + \"static/media/insta.a5f23260.png\";","module.exports = __webpack_public_path__ + \"static/media/fb.5ce4bc0c.png\";","module.exports = __webpack_public_path__ + \"static/media/wazzap.c58ba685.png\";","module.exports = __webpack_public_path__ + \"static/media/nasa.d2d99ea7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/impress2.9460a995.jpg\";","module.exports = __webpack_public_path__ + \"static/media/weather.6d5cd23c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rocket.3d3c32aa.png\";","module.exports = __webpack_public_path__ + \"static/media/1.75e3295a.jpg\";","const reducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      window.localStorage.setItem('loggedUser', JSON.stringify(action.data));\r\n      return action.data;\r\n    case 'SET_USER':\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userLogin = info => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'LOGIN',\r\n      data: {\r\n        token: info.value,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const setUser = info => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'SET_USER',\r\n      data: {\r\n        token: info.token,\r\n        username: info.username,\r\n        id: info.id,\r\n        level: info.level,\r\n        posts: info.posts,\r\n        friends: info.friends,\r\n      },\r\n    });\r\n  };\r\n};\r\nexport default reducer;\r\n","const reducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'NOTIFICATION':\r\n      return action.data;\r\n    case 'CLEAR':\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setNotification = (text, style, duration) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'NOTIFICATION',\r\n      data: {\r\n        text,\r\n        style,\r\n      },\r\n    });\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: 'CLEAR',\r\n      });\r\n    }, duration * 1000);\r\n  };\r\n};\r\n\r\nexport default reducer;\r\n","import thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport userReducer from './reducers/user';\r\nimport notificationReducer from './reducers/notification';\r\n\r\nconst reducer = combineReducers({\r\n  user: userReducer,\r\n  notification: notificationReducer,\r\n});\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import { ApolloClient } from 'apollo-client';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { setContext } from 'apollo-link-context';\r\nimport { split } from 'apollo-link';\r\nimport { WebSocketLink } from 'apollo-link-ws';\r\nimport { getMainDefinition } from 'apollo-utilities';\r\n\r\n// const PORT = process.env.PORT || 4000;\r\n// eslint-disable-next-line new-cap\r\nconst httpLink = new createHttpLink({\r\n  uri: `http://fsht.herokuapp.com/graphql`,\r\n});\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: `ws://fsht.herokuapp.com/graphql`,\r\n  options: { reconnect: true },\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = JSON.parse(localStorage.getItem('loggedUser'));\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `bearer ${token.token}` : null,\r\n    },\r\n  };\r\n});\r\n\r\nconst link = split(\r\n  ({ query }) => {\r\n    const { kind, operation } = getMainDefinition(query);\r\n    return kind === 'OperationDefinition' && operation === 'subscription';\r\n  },\r\n  wsLink,\r\n  authLink.concat(httpLink)\r\n);\r\n\r\nconst client = new ApolloClient({\r\n  link,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default client;\r\n","/* eslint-disable import/prefer-default-export */\r\nexport const fi = {\r\n  header_services: 'Palvelut',\r\n  chatpage_nolog: 'Kirjaudu sisään käyttääksesi chat-toimintoa.',\r\n  header_users: 'Käyttäjät',\r\n  header_weather: 'Sää-sovellus',\r\n  header_space: 'SpaceX API',\r\n  header_signed: 'Kirjautuneena: ',\r\n  header_logout: 'Kirjaudu ulos',\r\n  chatpage_send: 'Lähetä',\r\n  loadingicon: 'Ladataan...',\r\n  login_username: 'Käyttäjänimi',\r\n  login_password: 'Salasana',\r\n  login_login: 'Kirjaudu',\r\n  login_cancel: 'Peruuta',\r\n  mainpage_nolog_h1: 'Hei siellä! ;)',\r\n  mainpage_nolog_p: 'Kirjaudu sisään nähdäksesi palvelutarjonnan.',\r\n  mainpage_title: 'App Mashup!',\r\n  mainpage_h5: `Oletko koskaan kaivannut yhtä paikkaa, \r\n  josta löydät kaikki tarpeelliset työkalut viestittelyyn, \r\n  säätietojen hakemiseen sekä SpaceX-operaatioiden tutkimiseen?\r\n  Etsintä on ohi!`,\r\n  mainpage_li1: 'Sosialisoidu käyttämällä chat-sovellusta.',\r\n  mainpage_li2: 'Tarkasta sääennusteet. Maailmanlaajuisesti',\r\n  mainpage_li3: 'Space X -tehtävät. Menneet sekä tulevat.',\r\n  mainpage_carousel1_h3: 'Viestittele yötä päivää',\r\n  mainpage_carousel1_p: 'Rajoitettu ystävälistallasi oleviin käyttäjiin.',\r\n  mainpage_carousel2_h3: 'SPACE X -tehtävät',\r\n  mainpage_carousel2_p: 'Tietoja tulevista ja menneistä tehtävistä.',\r\n  mainpage_carousel3_h3: 'Sääennusteet',\r\n  mainpage_carousel3_p: 'Tee suunnitelmia tarkkuudella.',\r\n  sc_c1_header: 'Chat-sovellus',\r\n  sc_c1_title: 'Sosialisoidu',\r\n  sc_c1_p1: 'Löydä ihmisiä.',\r\n  sc_c1_p2: 'Lisää heidät ystävälistallesi.',\r\n  sc_c1_p3: 'Chattaile pois!',\r\n  sc_c2_header: 'Sää-sovellus',\r\n  sc_c1_button: 'Chat App',\r\n  sc_c2_button: 'Sää-sovellus',\r\n  sc_c2_title: 'Sää',\r\n  sc_c2_text: `Valitse haluttu maa. \r\n  Sovellus kertoo sinulle kyseisen maan pääkaupungin sääennusteen.`,\r\n  sc_c3_title: 'SpaceX operaatiot',\r\n  sc_c3_text: `Tutki kaikkia menneitä sekä tulevia SpaceX -tehtäviä.`,\r\n  space_nolog: 'Log in to use the SpaceX API!',\r\n  space_h1: 'SpaceX-tehtävät',\r\n  space_filter1: 'Raketti',\r\n  space_filter2: 'Järjestys',\r\n  space_filter2_1: 'Laskeva',\r\n  space_filter2_2: 'Nouseva',\r\n  space_filter3: 'Laajuus',\r\n  space_filter3_1: 'Kaikki',\r\n  space_filter3_2: 'Tulevat',\r\n  space_accordion1: 'Kuvaus',\r\n  space_accordion2: 'Raketti',\r\n  space_accordion3: 'Laukaisupaikka',\r\n  space_accordion4: 'Lähtölaskenta',\r\n  space_filter_fail: 'Ei osumia',\r\n  space_days: 'pv',\r\n  space_hours: 't',\r\n  space_minutes: 'm',\r\n  space_seconds: 's',\r\n  space_expired: 'Vanhentunut',\r\n  toggle_log: 'Kirjaudu',\r\n  toggle_sign: 'Liity',\r\n  userpage_nolog: 'Kirjaudu sisään nähdäksesi profiilisivun.',\r\n  userpage_friends: 'Ystävät:',\r\n  userpage_username: 'Käyttäjänimi',\r\n  usersearch_form_label: 'Etsi käyttäjänimellä:',\r\n  usersearch_form_button: 'Tyhjennä',\r\n  usersearch_action_add: 'Lisää ystävä',\r\n  usersearch_action_remove: 'Poista',\r\n  weather_nolog: 'Kirjaudu sisään käyttääksesi Sää-sovellusta.',\r\n  weather_country: 'Maa',\r\n  weather_forecast_capital: 'Pääkaupunki',\r\n  Mon: 'Ma',\r\n  Tue: 'Ti',\r\n  Wed: 'Ke',\r\n  Thu: 'To',\r\n  Fri: 'Pe',\r\n  Sat: 'La',\r\n  Sun: 'Su',\r\n  weather_avg: 'Ka:',\r\n  msg_couldnt_remove: `Viestiä ei voitu poistaa.`,\r\n  welcome: 'Tervetuloa',\r\n  slide1: 'Ensimmäinen kortti',\r\n  slide2: 'Toinen kortti',\r\n  slide3: 'Kolmas kortti',\r\n  signup_success: 'Rekisteröidyit hyväksytysti nimellä',\r\n  space_details: 'Yksityiskohdat',\r\n  chat_started: 'Chat aloitettu.',\r\n  userpage_posts: 'Viestit:',\r\n  userpage_level: 'Taso:',\r\n  friend_added: 'Ystävä lisätty.',\r\n  clear: 'Tyhjennä',\r\n};\r\n","/* eslint-disable import/prefer-default-export */\r\nexport const en = {\r\n  header_services: 'Services',\r\n  chatpage_send: 'Send',\r\n  chatpage_nolog: 'Log in to use the chat application.',\r\n  header_users: 'Users',\r\n  header_weather: 'Weather App',\r\n  header_space: 'SpaceX API',\r\n  header_signed: 'Signed in as: ',\r\n  header_logout: 'Logout',\r\n  loadingicon: 'Loading...',\r\n  login_username: 'Username',\r\n  login_password: 'Password',\r\n  login_login: 'Login',\r\n  login_cancel: 'Cancel',\r\n  mainpage_nolog_h1: 'Hey there! ;)',\r\n  mainpage_nolog_p: 'Please log in to gain access to the services.',\r\n  mainpage_title: 'App Mashup!',\r\n  mainpage_h5: `Ever wanted one place with all the necessary tools to socialize,\r\n  be informed about weather and get knowledge about SpaceX missions?\r\n  Look no further!`,\r\n  mainpage_li1: 'Socialize using the chat app.',\r\n  mainpage_li2: 'Check out the weather forecast. World wide.',\r\n  mainpage_li3: 'Space X -missions. The past and the future.',\r\n  mainpage_carousel1_h3: 'Chat like no tomorrow',\r\n  mainpage_carousel1_p: 'Limited to people on your friendlist.',\r\n  mainpage_carousel2_h3: 'SPACE X -missions',\r\n  mainpage_carousel2_p: 'List of upcoming flights.',\r\n  mainpage_carousel3_h3: 'Weather forecast',\r\n  mainpage_carousel3_p: 'Make plans with precision.',\r\n  sc_c1_header: 'Chat Application',\r\n  sc_c1_title: 'Socialize',\r\n  sc_c1_p1: 'Find people.',\r\n  sc_c1_p2: 'Add them to your friendlist.',\r\n  sc_c1_p3: 'Chat away!',\r\n  sc_c1_button: 'Chat App',\r\n  sc_c2_header: 'Weather Application',\r\n  sc_c2_title: 'Weather',\r\n  sc_c2_text: `Choose the desired country. The app shows the weather forecast\r\n  of the country&apos;s capital city.`,\r\n  sc_c2_button: 'Weather App',\r\n  sc_c3_title: 'SpaceX missions',\r\n  sc_c3_text: `Check out all the SpaceX -missions that have happened or will\r\n  happen.`,\r\n  space_nolog: 'Log in to use the SpaceX API!',\r\n  space_h1: 'Space X Missions',\r\n  space_filter1: 'Rocket',\r\n  space_filter2: 'Order',\r\n  space_filter2_1: 'Descending',\r\n  space_filter2_2: 'Ascending',\r\n  space_filter3: 'Scope',\r\n  space_filter3_1: 'All',\r\n  space_filter3_2: 'Upcoming',\r\n  space_accordion1: 'Description',\r\n  space_accordion2: 'Rocket',\r\n  space_accordion3: 'Launch site',\r\n  space_accordion4: 'Countdown',\r\n  space_filter_fail: 'No matches',\r\n  space_days: 'd',\r\n  space_hours: 'h',\r\n  space_minutes: 'm',\r\n  space_seconds: 's',\r\n  space_expired: 'Expired',\r\n  toggle_log: 'Log in',\r\n  toggle_sign: 'Sign up',\r\n  userpage_nolog: 'Log in to see the user profile.',\r\n  userpage_friends: 'Friends:',\r\n  userpage_username: 'Username',\r\n  usersearch_form_label: 'Search with username:',\r\n  usersearch_form_button: 'Clear',\r\n  usersearch_action_add: 'Add friend',\r\n  usersearch_action_remove: 'Remove',\r\n  weather_nolog: 'Log in to use the weather app!',\r\n  weather_country: 'Country',\r\n  weather_capital: 'Capital',\r\n  Mon: 'Mon',\r\n  Tue: 'Tue',\r\n  Wed: 'Wed',\r\n  Thu: 'Thu',\r\n  Fri: 'Fri',\r\n  Sat: 'Sat',\r\n  Sun: 'Sun',\r\n  weather_avg: 'Avg:',\r\n  msg_couldnt_remove: `The message couldn't be removed.`,\r\n  welcome: 'Welcome',\r\n  slide1: 'First slide',\r\n  slide2: 'Second slide',\r\n  slide3: 'Third slide',\r\n  signup_success: 'Signed up successfully as',\r\n  space_details: 'Mission details',\r\n  chat_started: 'Chat started.',\r\n  userpage_posts: 'Posts:',\r\n  userpage_level: 'Level:',\r\n  friend_added: 'Friend added.',\r\n  clear: 'Clear',\r\n};\r\n","import * as messages from './index';\r\n\r\nlet locale = document.documentElement.lang;\r\nlet localeChanged = false;\r\n\r\nif (!locale) {\r\n  locale = 'fi';\r\n}\r\n\r\nif (locale.includes('-') && locale.length > 2) {\r\n  locale = locale.slice(0, 2);\r\n}\r\n\r\nlet translations = messages[locale];\r\n\r\nconst translate = (key, ...vars) => {\r\n  // eslint-disable-next-line\r\n  key += vars.length > 0 ? '.value' : '';\r\n  if (!translations[key]) {\r\n    console.warn(`Translation ${key} is missing`);\r\n    return '';\r\n  }\r\n  return translations[key].replace(/{(\\d+)}/g, (m, p1) => vars[p1]);\r\n};\r\n\r\nconst memoize = method => {\r\n  let cache = {};\r\n  return (...args) => {\r\n    if (localeChanged && cache) {\r\n      cache = {};\r\n      localeChanged = false;\r\n    }\r\n    const key = JSON.stringify(args);\r\n    cache[key] = cache[key] || method.apply(this, args);\r\n    return cache[key];\r\n  };\r\n};\r\n\r\nexport const setLocale = newLang => {\r\n  locale = newLang;\r\n  translations = messages[locale];\r\n  localeChanged = true;\r\n};\r\n\r\nexport default memoize(translate);\r\n","import React, { useState, useImperativeHandle } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport translate from '../util/localization/i18n';\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [toggle, setToggle] = useState('none');\r\n\r\n  const toggleVisibility = () => {\r\n    setToggle('none');\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n    };\r\n  });\r\n  return (\r\n    <>\r\n      {toggle === 'none' && (\r\n        <div style={{ width: '10rem' }}>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"warning\"\r\n            onClick={() => setToggle('log')}\r\n            className=\"mr-sm-1\"\r\n          >\r\n            {translate('toggle_log')}\r\n          </Button>\r\n          {` | `}\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"success\"\r\n            onClick={() => setToggle('sign')}\r\n            className=\"ml-sm-1\"\r\n          >\r\n            {translate('toggle_sign')}\r\n          </Button>\r\n        </div>\r\n      )}\r\n      {toggle === 'log' && <>{props.children[0]} </>}\r\n      {toggle === 'sign' && <>{props.children[1]}</>}\r\n    </>\r\n  );\r\n});\r\n\r\nTogglable.propTypes = {\r\n  children: PropTypes.arrayOf(\r\n    PropTypes.oneOfType([PropTypes.element, PropTypes.element])\r\n  ),\r\n};\r\n\r\nTogglable.defaultProps = {\r\n  children: () => [],\r\n};\r\n\r\nexport default Togglable;\r\n","import { useState } from 'react';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const useField = type => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const reset = () => {\r\n    setValue('');\r\n  };\r\n\r\n  return {\r\n    value,\r\n    onChange,\r\n    type,\r\n    reset,\r\n  };\r\n};\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const MESSAGE_SUBSCRIPTION = gql`\r\n  subscription onMessageAdded($id: String) {\r\n    messageAdded(id: $id) {\r\n      message\r\n      id\r\n      date\r\n      sender {\r\n        id\r\n        username\r\n      }\r\n      room {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const COUNTRIES = gql`\r\n  {\r\n    getCountries {\r\n      name\r\n      alpha2Code\r\n      capital\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REMOVE_MESSAGE = gql`\r\n  mutation removeMessage($id: ID, $room: ID) {\r\n    removeMessage(id: $id, room: $room) {\r\n      message\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_LAUNCH_DATA = gql`\r\n  {\r\n    getLaunchData {\r\n      value\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_WEATHER_DATA = gql`\r\n  mutation getWeatherData($capital: String) {\r\n    getWeatherData(capital: $capital) {\r\n      value\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      value\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SIGN = gql`\r\n  mutation sign($username: String!, $password: String!) {\r\n    addUser(username: $username, password: $password) {\r\n      username\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ALL_USERS = gql`\r\n  {\r\n    allUsers {\r\n      username\r\n      id\r\n      posts\r\n      level\r\n      rooms {\r\n        id\r\n      }\r\n      friends {\r\n        username\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_ROOM = gql`\r\n  mutation makeRoom($senderId: String, $receiverId: String, $title: String) {\r\n    createRoom(senderId: $senderId, receiverId: $receiverId, title: $title) {\r\n      users {\r\n        username\r\n        id\r\n      }\r\n      id\r\n      title\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER_INFO = gql`\r\n  query getUserInfo($username: String) {\r\n    getUserInfo(username: $username) {\r\n      posts\r\n      username\r\n      level\r\n      id\r\n      friends {\r\n        username\r\n        posts\r\n        level\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_CHATROOM_INFO = gql`\r\n  query getChatroomInfo($id: String) {\r\n    getChatroomInfo(id: $id) {\r\n      id\r\n      users {\r\n        id\r\n        username\r\n      }\r\n      messages {\r\n        id\r\n        message\r\n        sender {\r\n          id\r\n          username\r\n        }\r\n        room {\r\n          id\r\n        }\r\n        date\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_FRIEND = gql`\r\n  mutation addFriend($id: ID!) {\r\n    addFriend(id: $id) {\r\n      id\r\n      username\r\n      posts\r\n      level\r\n      friends {\r\n        username\r\n        id\r\n        posts\r\n        level\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SEND_MSG = gql`\r\n  mutation sendMessage($id: String, $message: String, $senderId: String) {\r\n    sendMessage(roomId: $id, message: $message, sender: $senderId) {\r\n      id\r\n      message\r\n      sender {\r\n        id\r\n        username\r\n      }\r\n      date\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ME = gql`\r\n  {\r\n    me {\r\n      username\r\n      id\r\n      rooms {\r\n        id\r\n      }\r\n      friends {\r\n        username\r\n        id\r\n        posts\r\n        level\r\n      }\r\n      posts\r\n      level\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useField } from '../hooks/index';\r\nimport { SIGN } from '../services/queries';\r\nimport translate from '../util/localization/i18n';\r\nimport { setNotification } from '../reducers/notification';\r\n\r\nconst Signup = ({ toggleForm, setNotification }) => {\r\n  const uname = useField('text');\r\n  const pw = useField('password');\r\n\r\n  const [signup] = useMutation(SIGN);\r\n\r\n  const handleSign = async e => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const { loading, data } = await signup({\r\n        variables: {\r\n          username: uname.value,\r\n          password: pw.value,\r\n        },\r\n      });\r\n      toggleForm();\r\n\r\n      if (!loading) {\r\n        setNotification(\r\n          `${translate('signup_success')} ${data.addUser.username}!`,\r\n          'success',\r\n          5\r\n        );\r\n      }\r\n    } catch (error) {\r\n      setNotification(`${error.message}`, 'danger', 5);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form inline onSubmit={e => handleSign(e)}>\r\n        <Form.Control\r\n          autoFocus\r\n          {...uname}\r\n          reset={null}\r\n          placeholder={translate('login_username')}\r\n          className=\"mr-sm-3\"\r\n        />\r\n        <Form.Control\r\n          {...pw}\r\n          reset={null}\r\n          placeholder={translate('login_password')}\r\n          className=\"mr-sm-3\"\r\n        />\r\n        <Button type=\"submit\" size=\"sm\" variant=\"success\" className=\"mr-1\">\r\n          {translate('toggle_sign')}\r\n        </Button>\r\n        <Button size=\"sm\" variant=\"light\" onClick={() => toggleForm()}>\r\n          {translate('login_cancel')}\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setNotification,\r\n};\r\n\r\nSignup.propTypes = {\r\n  setNotification: PropTypes.func.isRequired,\r\n  toggleForm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Signup);\r\n","import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useField } from '../hooks/index';\r\nimport { userLogin } from '../reducers/user';\r\nimport { LOGIN } from '../services/queries';\r\nimport translate from '../util/localization/i18n';\r\nimport { setNotification } from '../reducers/notification';\r\n\r\nconst Login = ({ setNotification, userLogin, toggleForm, client }) => {\r\n  const ufields = useField('text');\r\n  const pfields = useField('password');\r\n  const [loggedUser] = useMutation(LOGIN);\r\n\r\n  const handleLogin = async e => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const { loading, data } = await loggedUser({\r\n        variables: {\r\n          username: ufields.value,\r\n          password: pfields.value,\r\n        },\r\n      });\r\n      if (!loading) {\r\n        setNotification(\r\n          `${translate('welcome')} ${ufields.value}`,\r\n          'success',\r\n          5\r\n        );\r\n        userLogin(data.login);\r\n\r\n        // resetStore() clears the cached store and refetches all open queries.\r\n        // Important to remember when creating new user session.\r\n        client.resetStore();\r\n      }\r\n    } catch (error) {\r\n      setNotification(`${error.message}`, 'danger', 5);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form inline onSubmit={event => handleLogin(event)}>\r\n        <Form.Control\r\n          maxLength={20}\r\n          autoFocus\r\n          {...ufields}\r\n          reset={null}\r\n          placeholder={translate('login_username')}\r\n          className=\"mr-sm-3\"\r\n        />\r\n        <Form.Control\r\n          maxLength={20}\r\n          width={10}\r\n          {...pfields}\r\n          reset={null}\r\n          placeholder={translate('login_password')}\r\n          className=\"mr-sm-3\"\r\n        />\r\n        <Button type=\"submit\" size=\"sm\" variant=\"warning\" className=\"mr-1\">\r\n          {translate('login_login')}\r\n        </Button>\r\n        <Button size=\"sm\" variant=\"light\" onClick={() => toggleForm()}>\r\n          {translate('login_cancel')}\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  user: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\r\n  userLogin: PropTypes.func.isRequired,\r\n  setNotification: PropTypes.func.isRequired,\r\n  toggleForm: PropTypes.func.isRequired,\r\n  client: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  userLogin,\r\n  setNotification,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import React from 'react';\r\nimport { Nav, Navbar, Button, NavDropdown, Image } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { setUser } from '../reducers/user';\r\nimport Togglable from './Togglable';\r\nimport translate from '../util/localization/i18n';\r\nimport Signup from './Signup';\r\nimport Login from './Login';\r\nimport logo from '../util/img/logo2.jpg';\r\n\r\nconst Header = ({ history, user, setUser, client, setLocale, lang }) => {\r\n  const styles = {\r\n    color: 'white',\r\n  };\r\n\r\n  const formToggle = React.createRef();\r\n  const toggleForm = () => {\r\n    formToggle.current.toggleVisibility();\r\n  };\r\n\r\n  const logout = () => {\r\n    window.localStorage.clear();\r\n    setUser({});\r\n    client.resetStore();\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Navbar expand=\"md\" collapseOnSelect bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n      <Navbar.Brand href=\"/\" as=\"span\">\r\n        <Link to=\"/\">\r\n          <Image\r\n            rounded\r\n            alt=\"logo\"\r\n            src={logo}\r\n            width=\"40\"\r\n            height=\"40\"\r\n            className=\"d-inline-block align-top\"\r\n          />\r\n        </Link>\r\n        {' FSHT'}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavDropdown\r\n            title={translate('header_services')}\r\n            id=\"collasible-nav-dropdown\"\r\n          >\r\n            <NavDropdown.Item as=\"span\">\r\n              <Link to=\"/service/space\">{translate('header_space')}</Link>\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item as=\"span\">\r\n              <Link to=\"/service/weather\">{translate('header_weather')}</Link>\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n          <Nav.Link href=\"/s/users\" as=\"span\" className=\"mb-sm-2\">\r\n            <Link to=\"/s/users\" style={styles}>\r\n              {translate('header_users')}\r\n            </Link>\r\n          </Nav.Link>\r\n        </Nav>\r\n        <div className=\"ml-auto mr-4\">\r\n          <div className=\"mb-1\">\r\n            <Button\r\n              style={{ width: '4rem' }}\r\n              variant=\"outline-info\"\r\n              size=\"sm\"\r\n              active={lang === 'en'}\r\n              onClick={() => setLocale('en')}\r\n            >\r\n              en\r\n            </Button>\r\n          </div>\r\n          <div className=\"mb-1\">\r\n            <Button\r\n              style={{ width: '4rem' }}\r\n              variant=\"outline-info\"\r\n              active={lang === 'fi'}\r\n              size=\"sm\"\r\n              onClick={() => setLocale('fi')}\r\n            >\r\n              fi\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        {!user && (\r\n          <>\r\n            <Togglable ref={formToggle} color=\"warning\">\r\n              <Login toggleForm={toggleForm} client={client} />\r\n              <Signup toggleForm={toggleForm} />\r\n            </Togglable>\r\n          </>\r\n        )}\r\n        {user && (\r\n          <>\r\n            <Navbar.Text as=\"span\">\r\n              <span style={{ color: 'white' }}>\r\n                {translate('header_signed')}\r\n              </span>\r\n              <Link\r\n                className=\"mr-2\"\r\n                to={`/user/${user.username}`}\r\n                style={{ color: 'black', textUnderlinePosition: 'auto' }}\r\n              >\r\n                {user.username}\r\n              </Link>\r\n              |\r\n              <Button\r\n                size=\"sm\"\r\n                className=\"ml-2\"\r\n                onClick={() => logout()}\r\n                variant=\"danger\"\r\n              >\r\n                {translate('header_logout')}\r\n              </Button>\r\n            </Navbar.Text>\r\n          </>\r\n        )}\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setUser,\r\n};\r\n\r\nHeader.propTypes = {\r\n  client: PropTypes.oneOfType([PropTypes.object]).isRequired,\r\n  user: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.string,\r\n    PropTypes.string,\r\n  ]),\r\n  history: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\r\n  setUser: PropTypes.func.isRequired,\r\n  setLocale: PropTypes.func.isRequired,\r\n  lang: PropTypes.objectOf(PropTypes.object).isRequired,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  user: undefined,\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    null,\r\n    mapDispatchToProps\r\n  )(Header)\r\n);\r\n","import React from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport twitter from '../util/img/twitter.png';\r\nimport ig from '../util/img/insta.png';\r\nimport fb from '../util/img/fb.png';\r\nimport whatsapp from '../util/img/wazzap.png';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        paddingTop: '40px',\r\n        paddingBottom: '40px',\r\n        bottom: '0',\r\n        width: '100%',\r\n        backgroundColor: '#343a40',\r\n        color: '#808080',\r\n      }}\r\n      className=\"text-center\"\r\n    >\r\n      <p>\r\n        <strong>Application Mashup</strong>\r\n      </p>\r\n      <p>\r\n        <Image\r\n          src={fb}\r\n          alt=\"facebook\"\r\n          rounded\r\n          style={{ height: '50px', width: '50px' }}\r\n        />\r\n        <Image\r\n          src={ig}\r\n          alt=\"instagram\"\r\n          rounded\r\n          style={{ height: '50px', width: '50px' }}\r\n        />\r\n        <Image\r\n          src={twitter}\r\n          alt=\"twitter\"\r\n          rounded\r\n          style={{ height: '50px', width: '50px' }}\r\n        />\r\n        <Image\r\n          src={whatsapp}\r\n          alt=\"whatsapp\"\r\n          rounded\r\n          style={{ height: '50px', width: '50px' }}\r\n        />\r\n      </p>\r\n      <p style={{ marginBottom: '0' }}>&copy; SJ.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Container, Col, Row, Spinner } from 'react-bootstrap';\r\nimport translate from '../util/localization/i18n';\r\n\r\nconst LoadingIcon = () => (\r\n  <Container style={{ minHeight: '100vh' }}>\r\n    <Row>\r\n      <Col\r\n        className=\"d-flex\"\r\n        style={{\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          height: '100vh',\r\n        }}\r\n      >\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">{translate('loadingicon')}</span>\r\n        </Spinner>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default LoadingIcon;\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { Container, Col, Row, Table, Button } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { setNotification } from '../reducers/notification';\r\nimport { GET_USER_INFO, CREATE_ROOM } from '../services/queries';\r\nimport translate from '../util/localization/i18n';\r\nimport LoadingIcon from './LoadingIcon';\r\n\r\nconst UserPage = ({ foo, setNotification, history, me }) => {\r\n  const { data, loading, error } = useQuery(GET_USER_INFO, {\r\n    variables: {\r\n      username: foo.params.username,\r\n    },\r\n  });\r\n\r\n  useEffect(() => window.scrollTo(0, 0), []);\r\n\r\n  const [createRoom] = useMutation(CREATE_ROOM);\r\n\r\n  const handleChat = async (senderId, receiverId) => {\r\n    try {\r\n      const room = await createRoom({\r\n        variables: {\r\n          senderId,\r\n          receiverId,\r\n          title: 'awdad',\r\n        },\r\n      });\r\n      setNotification(`${translate('chat_started')}`, 'success', 5);\r\n      history.push(`/chat/${room.data.createRoom.id}`);\r\n    } catch (error) {\r\n      setNotification(`${error.message}`, 'danger', 5);\r\n    }\r\n  };\r\n\r\n  if (!me)\r\n    return (\r\n      <div style={{ minHeight: '100vh' }} className=\"container text-center\">\r\n        <div style={{ marginTop: '50px' }}>\r\n          <h4>\r\n            <u>{translate('userpage_nolog')}</u>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  if (error)\r\n    return (\r\n      <h2 style={{ textAlign: 'center', marginTop: '20%' }}>\r\n        {error.message.substring(15)}\r\n      </h2>\r\n    );\r\n\r\n  if (loading) return <LoadingIcon />;\r\n\r\n  return (\r\n    <div style={{ minHeight: '100vh' }}>\r\n      <Container>\r\n        <Row\r\n          className=\"mb-4 mt-4\"\r\n          style={{ borderBottom: '1px solid rgb(188, 206, 235)' }}\r\n        >\r\n          <Col>\r\n            <h3 className=\"p-3\">{data.getUserInfo.username}</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5>\r\n              {translate('userpage_posts')} {data.getUserInfo.posts || 0}\r\n            </h5>\r\n          </Col>\r\n          <Col>\r\n            <h5>\r\n              {translate('userpage_level')}{' '}\r\n              {data.getUserInfo.level || 'beginner'}\r\n            </h5>\r\n          </Col>\r\n        </Row>\r\n        {me.username === data.getUserInfo.username && (\r\n          <Row>\r\n            <Col className=\"mt-4\">\r\n              <h5>{translate('userpage_friends')} </h5>\r\n              <Table size=\"sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>{translate('login_username')}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data.getUserInfo.friends &&\r\n                    data.getUserInfo.friends.map((friend, i) => {\r\n                      return (\r\n                        <tr key={`${friend.username}`}>\r\n                          <td>{i + 1}</td>\r\n                          <td>{friend.username}</td>\r\n                          <td>\r\n                            <Button\r\n                              onClick={() =>\r\n                                handleChat(me.id, data.getUserInfo.id)\r\n                              }\r\n                              size=\"sm\"\r\n                            >\r\n                              Chat\r\n                            </Button>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserPage.propTypes = {\r\n  foo: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\r\n  setNotification: PropTypes.func.isRequired,\r\n  history: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\r\n  me: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n};\r\n\r\nUserPage.defaultProps = {\r\n  me: undefined,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setNotification,\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    null,\r\n    mapDispatchToProps\r\n  )(UserPage)\r\n);\r\n","import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport translate from '../util/localization/i18n';\r\n\r\nconst UserPageSearch = ({ searchField, handleClear }) => {\r\n  const focusRef = React.useRef(null);\r\n\r\n  const clear = () => {\r\n    focusRef.current.focus();\r\n    handleClear();\r\n  };\r\n  return (\r\n    <Form>\r\n      <Form.Group>\r\n        <Form.Label>{translate('usersearch_form_label')}</Form.Label>\r\n        <Form.Control\r\n          ref={focusRef}\r\n          {...searchField}\r\n          reset={null}\r\n          placeholder={translate('login_username')}\r\n        />\r\n      </Form.Group>\r\n      <Button onClick={clear} variant=\"primary\">\r\n        {translate('clear')}\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nUserPageSearch.propTypes = {\r\n  searchField: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\r\n    .isRequired,\r\n  handleClear: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default UserPageSearch;\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Container, Row, Col, Table, Spinner } from 'react-bootstrap';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { useField } from '../hooks/index';\r\nimport { setNotification } from '../reducers/notification';\r\nimport { setUser } from '../reducers/user';\r\nimport { ALL_USERS, ADD_FRIEND, CREATE_ROOM } from '../services/queries';\r\nimport translate from '../util/localization/i18n';\r\nimport LoadingIcon from './LoadingIcon';\r\nimport UserSearchField from './UserSearchField';\r\n\r\nconst UserSearch = ({ history, me, setNotification }) => {\r\n  const searchField = useField('text');\r\n  const { data, loading } = useQuery(ALL_USERS);\r\n  const [addFriend] = useMutation(ADD_FRIEND);\r\n  const [createRoom] = useMutation(CREATE_ROOM);\r\n\r\n  useEffect(() => window.scrollTo(0, 0), []);\r\n\r\n  const handleChat = async (senderId, receiverId) => {\r\n    try {\r\n      const room = await createRoom({\r\n        variables: {\r\n          senderId,\r\n          receiverId,\r\n          title: 'awdad',\r\n        },\r\n      });\r\n\r\n      setNotification(`${translate('chat_started')}`, 'success', 5);\r\n      history.push(`/chat/${room.data.createRoom.id}`);\r\n    } catch (error) {\r\n      setNotification(`${error.message}`, 'danger', 5);\r\n    }\r\n  };\r\n\r\n  const handleFriendAdd = async id => {\r\n    try {\r\n      const afterAdd = await addFriend({\r\n        variables: {\r\n          id,\r\n        },\r\n      });\r\n\r\n      if (!afterAdd.loading) {\r\n        setNotification(`${translate('friend_added')}`, 'success', 5);\r\n      }\r\n    } catch (error) {\r\n      setNotification(`${error.message}`, 'danger', 5);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    searchField.reset();\r\n  };\r\n\r\n  if (loading) return <LoadingIcon />;\r\n\r\n  if (data.allUsers === undefined || data.allUsers === null)\r\n    return (\r\n      <Container fluid style={{ minHeight: '100vh' }}>\r\n        <UserSearchField searchField={searchField} handleClear={handleClear} />\r\n        <Container>\r\n          <Row>\r\n            <Col\r\n              style={{\r\n                textAlign: 'center',\r\n                marginTop: '5em',\r\n              }}\r\n            >\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">{translate('loadingicon')}</span>\r\n              </Spinner>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n    );\r\n\r\n  if (me === null || me === undefined)\r\n    return (\r\n      <Container fluid style={{ minHeight: '100vh' }}>\r\n        <UserSearchField searchField={searchField} handleClear={handleClear} />\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>{translate('login_username')}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {!loading &&\r\n              data.allUsers.map((usr, i) => (\r\n                <tr key={`${usr.username}-list`}>\r\n                  <td>{i + 1}</td>\r\n                  <td>\r\n                    <Link to={`/user/${usr.username}`}>{usr.username}</Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    );\r\n\r\n  return (\r\n    <Container fluid style={{ minHeight: '100vh' }}>\r\n      <UserSearchField searchField={searchField} handleClear={handleClear} />\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>{translate('login_username')}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {!loading &&\r\n            me.data !== null &&\r\n            data.allUsers\r\n              .filter(usr =>\r\n                usr.username\r\n                  .toLowerCase()\r\n                  .includes(searchField.value.toLowerCase())\r\n              )\r\n              .map((usr, i) => (\r\n                <tr key={`${usr.username}-list`}>\r\n                  <td>{i + 1}</td>\r\n                  <td>\r\n                    <Link to={`/user/${usr.username}`}>{usr.username}</Link>\r\n                  </td>\r\n                  {usr.friends !== null && me.username === usr.username ? (\r\n                    <>\r\n                      <td></td>\r\n                      <td></td>\r\n                    </>\r\n                  ) : me.friends.find(frd => frd.id === usr.id) ===\r\n                    undefined ? (\r\n                    <>\r\n                      <td>\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          onClick={() => handleFriendAdd(usr.id)}\r\n                        >\r\n                          {translate('usersearch_action_add')}\r\n                        </Button>\r\n                      </td>\r\n                      <td></td>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <td>\r\n                        <Button variant=\"secondary\" disabled>\r\n                          {translate('usersearch_action_remove')}\r\n                        </Button>\r\n                      </td>\r\n                      <td>\r\n                        <Button\r\n                          variant=\"secondary\"\r\n                          onClick={() => handleChat(me.id, usr.id)}\r\n                        >\r\n                          Chat\r\n                        </Button>\r\n                      </td>\r\n                    </>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n        </tbody>\r\n      </Table>\r\n    </Container>\r\n  );\r\n};\r\n\r\nUserSearch.propTypes = {\r\n  setNotification: PropTypes.func.isRequired,\r\n  me: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n  history: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\r\n};\r\n\r\nUserSearch.defaultProps = {\r\n  me: null,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setNotification,\r\n  setUser,\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(UserSearch)\r\n);\r\n","import React from 'react';\r\nimport { Col, Toast } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Message = ({ message, me, remove }) => {\r\n  const time = new Date(+message.date);\r\n\r\n  if (me.id === message.sender.id) {\r\n    return (\r\n      <>\r\n        <Col xs={{ order: 1 }} sm={{ order: 1 }}></Col>\r\n        <Col\r\n          className=\"p-1 pl-2\"\r\n          xs={{ order: 12, span: 8 }}\r\n          sm={{ order: 12, span: 8 }}\r\n        >\r\n          <Toast\r\n            style={{ maxWidth: '100%', overflow: 'auto' }}\r\n            onClose={() => remove(message.id)}\r\n          >\r\n            <Toast.Header>\r\n              <strong className=\"mr-auto\">{message.sender.username}</strong>\r\n              <small>{time.toLocaleString()}</small>\r\n            </Toast.Header>\r\n            <Toast.Body style={{ fontSize: '0.9rem', fontWeight: '200' }}>\r\n              {message.message}\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Col\r\n        className=\"p-1\"\r\n        sm={{ order: 1, span: 8 }}\r\n        xs={{ order: 1, span: 8 }}\r\n      >\r\n        <Toast style={{ maxWidth: '100%', overflow: 'auto' }}>\r\n          <Toast.Header closeButton={false}>\r\n            <strong className=\"mr-auto\">{message.sender.username}</strong>\r\n            <small>{time.toLocaleString()}</small>\r\n          </Toast.Header>\r\n          <Toast.Body style={{ fontSize: '0.9rem', fontWeight: '200' }}>\r\n            {message.message}\r\n          </Toast.Body>\r\n        </Toast>\r\n      </Col>\r\n      <Col sm={{ order: 12 }} xs={{ order: 12 }}></Col>\r\n    </>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {\r\n  remove: PropTypes.func.isRequired,\r\n  message: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\r\n  me: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React, { useEffect } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Message from './Message';\r\n\r\nconst Messages = ({ scrollToMsg, messages, removeMessage, me }) => {\r\n  useEffect(() => {\r\n    scrollToMsg();\r\n  }, [scrollToMsg]);\r\n\r\n  return (\r\n    <Col className=\"p-3\">\r\n      {messages.map(msg => (\r\n        <Row key={msg.id}>\r\n          <Message me={me} message={msg} remove={removeMessage} />\r\n        </Row>\r\n      ))}\r\n    </Col>\r\n  );\r\n};\r\n\r\nMessages.propTypes = {\r\n  scrollToMsg: PropTypes.func.isRequired,\r\n  messages: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\r\n  removeMessage: PropTypes.func.isRequired,\r\n  me: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\r\n};\r\n\r\nexport default Messages;\r\n","/* eslint-disable max-len */\r\nimport React, { useState, useCallback, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useQuery, useMutation, useSubscription } from '@apollo/react-hooks';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  Button,\r\n  FormControl,\r\n  Form,\r\n} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { setNotification } from '../reducers/notification';\r\nimport translate from '../util/localization/i18n';\r\nimport Messages from './Messages';\r\nimport LoadingIcon from './LoadingIcon';\r\n\r\nimport {\r\n  GET_CHATROOM_INFO,\r\n  SEND_MSG,\r\n  REMOVE_MESSAGE,\r\n  MESSAGE_SUBSCRIPTION,\r\n} from '../services/queries';\r\n\r\nconst ChatPage = ({ setNotification, match, me, client }) => {\r\n  const [msg, setMsg] = useState('');\r\n  const [update, setUpdate] = useState(true);\r\n\r\n  const scrollRef = React.useRef(null);\r\n\r\n  const [sendMsg] = useMutation(SEND_MSG);\r\n\r\n  const scrollToMsg = useCallback(() => {\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n    }\r\n  }, []);\r\n\r\n  const handleMessage = React.useCallback(async () => {\r\n    try {\r\n      const resp = await sendMsg({\r\n        variables: {\r\n          id: match.params.id,\r\n          message: msg,\r\n          senderId: me.id,\r\n        },\r\n      });\r\n\r\n      if (!resp.loading) {\r\n        const dataInStore = client.readQuery({\r\n          query: GET_CHATROOM_INFO,\r\n          variables: { id: match.params.id },\r\n        });\r\n        if (\r\n          !dataInStore.getChatroomInfo.messages\r\n            .map(msg => msg.id)\r\n            .includes(resp.data.sendMessage.id)\r\n        ) {\r\n          dataInStore.getChatroomInfo.messages = dataInStore.getChatroomInfo.messages.concat(\r\n            resp.data.sendMessage\r\n          );\r\n          client.writeQuery({\r\n            query: GET_CHATROOM_INFO,\r\n            data: dataInStore,\r\n          });\r\n        }\r\n        scrollToMsg();\r\n        setMsg('');\r\n      }\r\n    } catch (error) {\r\n      setNotification(`${error.message}`, 'danger', 5);\r\n    }\r\n  }, [match.params.id, msg, scrollToMsg, sendMsg, setNotification, client]);\r\n\r\n  const handleKeyPress = React.useCallback(\r\n    event => {\r\n      if (event.keyCode === 13 && !event.shiftKey) {\r\n        handleMessage();\r\n        event.preventDefault();\r\n      }\r\n    },\r\n    [handleMessage]\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleKeyPress);\r\n    return () => document.removeEventListener('keydown', handleKeyPress);\r\n  }, [handleKeyPress]);\r\n\r\n  useSubscription(MESSAGE_SUBSCRIPTION, {\r\n    variables: {\r\n      id: match.params.id,\r\n    },\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      const {\r\n        data: { messageAdded },\r\n      } = subscriptionData;\r\n      const dataInStore = client.readQuery({\r\n        query: GET_CHATROOM_INFO,\r\n        variables: { id: match.params.id },\r\n      });\r\n\r\n      if (\r\n        !dataInStore.getChatroomInfo.messages\r\n          .map(msg => msg.id)\r\n          .includes(messageAdded.id)\r\n      ) {\r\n        dataInStore.getChatroomInfo = {\r\n          ...dataInStore.getChatroomInfo,\r\n          messages: dataInStore.getChatroomInfo.messages.concat(messageAdded),\r\n        };\r\n        client.writeQuery({\r\n          query: GET_CHATROOM_INFO,\r\n          variables: { id: match.params.id },\r\n          data: dataInStore,\r\n        });\r\n        scrollToMsg();\r\n      }\r\n    },\r\n  });\r\n\r\n  const { data, error, loading } = useQuery(GET_CHATROOM_INFO, {\r\n    variables: {\r\n      id: match.params.id,\r\n    },\r\n  });\r\n\r\n  const [removeMessage] = useMutation(REMOVE_MESSAGE);\r\n\r\n  const handleRemoveMessage = async id => {\r\n    try {\r\n      const rm = await removeMessage({\r\n        variables: {\r\n          id,\r\n          room: match.params.id,\r\n        },\r\n      });\r\n\r\n      if (!rm.loading) {\r\n        const dataInStore = client.readQuery({\r\n          query: GET_CHATROOM_INFO,\r\n          variables: { id: match.params.id },\r\n        });\r\n\r\n        const idArr = dataInStore.getChatroomInfo.messages.map(msg => msg.id);\r\n\r\n        const idx = idArr.indexOf(id);\r\n\r\n        dataInStore.getChatroomInfo.messages.splice(idx, 1);\r\n\r\n        client.writeQuery({\r\n          query: GET_CHATROOM_INFO,\r\n          data: dataInStore,\r\n        });\r\n\r\n        setUpdate(!update);\r\n      }\r\n    } catch (error) {\r\n      setNotification(translate('msg_couldnt_remove'), 'danger', 5);\r\n    }\r\n  };\r\n\r\n  if (!me)\r\n    return (\r\n      <div style={{ minHeight: '100vh' }} className=\"container text-center\">\r\n        <div style={{ marginTop: '50px' }}>\r\n          <h4>\r\n            <u>{translate('chatpage_nolog')}</u>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  if (loading) return <LoadingIcon />;\r\n\r\n  if (error) {\r\n    // Could show an image here.\r\n    return (\r\n      <div style={{ minHeight: '100vh' }}>{error.message.substring(14)}</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ minHeight: '80vh' }}>\r\n        <Container style={{ maxWidth: '50rem' }}>\r\n          <Row\r\n            className=\"d-flex rounded\"\r\n            style={{\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              paddingBottom: '20px',\r\n              marginTop: '20px',\r\n            }}\r\n          >\r\n            <Col className=\"text-center rounded\">\r\n              <div style={{ display: 'inline-block', float: 'left' }}>\r\n                <strong style={{ color: 'red' }}>\r\n                  {!loading &&\r\n                    me &&\r\n                    data.getChatroomInfo &&\r\n                    data.getChatroomInfo.users.map(user =>\r\n                      user.username !== me.username ? user.username : null\r\n                    )}\r\n                </strong>\r\n              </div>\r\n              <div style={{ display: 'inline-block' }}>\r\n                <h4>Chat</h4>\r\n              </div>\r\n              <div style={{ display: 'inline-block', float: 'right' }}>\r\n                <strong style={{ color: 'blue' }}>{me && me.username}</strong>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row\r\n            className=\"d-flex rounded\"\r\n            style={{\r\n              backgroundColor: '#d9d7d7',\r\n              overflowY: 'auto',\r\n              overflowX: 'hidden',\r\n              height: '60vh',\r\n              position: 'relative',\r\n              border: '0.5rem inset #c9a9a7',\r\n              marginTop: '0.5rem',\r\n            }}\r\n            ref={scrollRef}\r\n          >\r\n            {!loading && data.getChatroomInfo && (\r\n              <Messages\r\n                scrollToMsg={scrollToMsg}\r\n                messages={data.getChatroomInfo.messages}\r\n                removeMessage={handleRemoveMessage}\r\n                me={me}\r\n              />\r\n            )}\r\n          </Row>\r\n        </Container>\r\n        <Form onSubmit={() => handleMessage()}>\r\n          <InputGroup size=\"sm\" className=\"mt-4 sticky-bottom\">\r\n            <InputGroup.Prepend>\r\n              <Button type=\"submit\">{translate('chatpage_send')}</Button>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              value={msg}\r\n              onChange={event => setMsg(event.target.value)}\r\n              as=\"textarea\"\r\n              style={{\r\n                resize: 'vertical',\r\n                maxHeight: '10em',\r\n                minHeight: '3rem',\r\n              }}\r\n              aria-label=\"With textarea\"\r\n            />\r\n          </InputGroup>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nChatPage.propTypes = {\r\n  setNotification: PropTypes.func.isRequired,\r\n  match: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.func,\r\n    PropTypes.object,\r\n  ]).isRequired,\r\n  client: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.func,\r\n    PropTypes.object,\r\n  ]).isRequired,\r\n  me: PropTypes.oneOfType([PropTypes.array, PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nChatPage.defaultProps = {\r\n  me: undefined,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setNotification,\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    null,\r\n    mapDispatchToProps\r\n  )(ChatPage)\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Jumbotron,\r\n  Carousel,\r\n  Image,\r\n} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport nasa from '../util/img/nasa.jpg';\r\nimport impress from '../util/img/impress2.jpg';\r\nimport weather from '../util/img/weather.jpg';\r\nimport translate from '../util/localization/i18n';\r\n\r\nconst MainPage = ({ me }) => {\r\n  const [index, setIndex] = useState(0);\r\n  const [direction, setDirection] = useState(null);\r\n\r\n  useEffect(() => window.scrollTo(0, 0), []);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n    setDirection(e.direction);\r\n  };\r\n\r\n  /*\r\n\r\n  Image spreading example:\r\n\r\n  <div\r\n      style={{\r\n        backgroundImage: `url(${bg})`,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        minHeight: '100vh',\r\n      }}\r\n      className=\"mb-4\"\r\n    >\r\n\r\n    */\r\n\r\n  if (!me) {\r\n    return (\r\n      <div className=\"container text-center\" style={{ minHeight: '100vh' }}>\r\n        <Jumbotron className=\"pb-0 mb-0\">\r\n          <h1>{translate('mainpage_nolog_h1')}</h1>\r\n          <p>{translate('mainpage_nolog_p')}</p>\r\n        </Jumbotron>\r\n        <div\r\n          className=\"rounded-circle\"\r\n          style={{\r\n            backgroundColor: 'black',\r\n            height: '10px',\r\n            width: '10px',\r\n            marginLeft: '50%',\r\n            marginBottom: '30px',\r\n            marginTop: '50px',\r\n          }}\r\n        />\r\n        <div\r\n          className=\"rounded-circle\"\r\n          style={{\r\n            backgroundColor: 'black',\r\n            height: '10px',\r\n            width: '10px',\r\n            marginLeft: '50%',\r\n            marginBottom: '30px',\r\n          }}\r\n        />\r\n        <div\r\n          className=\"rounded-circle\"\r\n          style={{\r\n            backgroundColor: 'black',\r\n            height: '10px',\r\n            width: '10px',\r\n            marginLeft: '50%',\r\n            marginBottom: '50px',\r\n          }}\r\n        />\r\n        <div>\r\n          <p>SpaceX API</p>\r\n          <p>{translate('sc_c2_header')}</p>\r\n          <p>Chat...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"mt-3 p-4 fluid\" style={{ marginBottom: '50px' }}>\r\n        <Row>\r\n          <Col\r\n            className=\"p-3\"\r\n            style={{ marginBottom: '40px', borderBottom: '1px solid #bcceeb' }}\r\n          >\r\n            <h2>App Mashup!</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5>{translate('mainpage_h5')}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-4\">\r\n          <Col\r\n            className=\"d-flex mb-3\"\r\n            style={{ alignItems: 'center', justifyContent: 'center' }}\r\n          >\r\n            <ul>\r\n              <li>{translate('mainpage_li1')}</li>\r\n              <li>{translate('mainpage_li2')}</li>\r\n              <li>{translate('mainpage_li3')}</li>\r\n            </ul>\r\n          </Col>\r\n          <Col lg={6}>\r\n            <Carousel\r\n              activeIndex={index}\r\n              direction={direction}\r\n              onSelect={handleSelect}\r\n            >\r\n              <Carousel.Item>\r\n                <Image\r\n                  className=\"d-block w-100\"\r\n                  src={impress}\r\n                  alt={translate('slide1')}\r\n                  style={{\r\n                    objectFit: 'cover',\r\n                    height: '15rem',\r\n                  }}\r\n                />\r\n                <Carousel.Caption>\r\n                  <h3>{translate('mainpage_carousel1_h3')}</h3>\r\n                  <p>{translate('mainpage_carousel1_p')}</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n              <Carousel.Item>\r\n                <Image\r\n                  className=\"d-block w-100\"\r\n                  src={nasa}\r\n                  alt={translate('slide2')}\r\n                  style={{ objectFit: 'cover', height: '15rem' }}\r\n                />\r\n                <Carousel.Caption>\r\n                  <h3>{translate('mainpage_carousel2_h3')}</h3>\r\n                  <p>{translate('mainpage_carousel2_p')}</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n              <Carousel.Item>\r\n                <Image\r\n                  className=\"d-block w-100\"\r\n                  src={weather}\r\n                  alt={translate('slide3')}\r\n                  style={{ objectFit: 'cover', height: '15rem' }}\r\n                />\r\n                <Carousel.Caption>\r\n                  <h3>{translate('mainpage_carousel3_h3')}</h3>\r\n                  <p>{translate('mainpage_carousel3_p')}</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n            </Carousel>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainPage.propTypes = {\r\n  me: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n};\r\n\r\nMainPage.defaultProps = {\r\n  me: undefined,\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Col,\r\n  Row,\r\n  InputGroup,\r\n  FormControl,\r\n  Table,\r\n  Button,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Card,\r\n} from 'react-bootstrap';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { COUNTRIES, GET_WEATHER_DATA } from '../services/queries';\r\nimport translate from '../util/localization/i18n';\r\nimport LoadingIcon from './LoadingIcon';\r\n\r\nconst Weather = ({ me }) => {\r\n  const [val, setVal] = useState('');\r\n  const [forecast, setForecast] = useState(null);\r\n  const { data, loading, error } = useQuery(COUNTRIES);\r\n  const [weatherData] = useMutation(GET_WEATHER_DATA);\r\n\r\n  useEffect(() => window.scrollTo(0, 0), []);\r\n\r\n  const weatherRef = React.useRef(null);\r\n\r\n  const getCountryData = async (capital, country) => {\r\n    try {\r\n      const data = await weatherData({\r\n        variables: {\r\n          capital,\r\n        },\r\n      });\r\n      setForecast({\r\n        country,\r\n        weather: JSON.parse(data.data.getWeatherData.value),\r\n      });\r\n      if (window.innerWidth < 768) {\r\n        weatherRef.current.scrollIntoView({\r\n          block: 'center',\r\n          behavior: 'smooth',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setForecast(null);\r\n    }\r\n  };\r\n\r\n  if (!me)\r\n    return (\r\n      <div style={{ minHeight: '100vh' }} className=\"container text-center\">\r\n        <div style={{ marginTop: '50px' }}>\r\n          <h4>\r\n            <u>{translate('weather_nolog')}</u>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  if (loading) return <LoadingIcon />;\r\n\r\n  if (error) {\r\n    return <div>{error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container-fluid p-4 mt-4 mb-4\"\r\n        style={{ minHeight: '100vh' }}\r\n      >\r\n        <h2>{translate('sc_c2_title')}</h2>\r\n        <InputGroup style={{ paddingBottom: '25px' }}>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"basic-addon1\">Filter</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            placeholder={translate('weather_country')}\r\n            aria-label=\"Country\"\r\n            aria-describedby=\"basic-addon1\"\r\n            value={val}\r\n            onChange={event => setVal(event.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <Row className=\"ml-0 mr-0\">\r\n          <Col\r\n            md={3}\r\n            xs={12}\r\n            className=\"rounded mb-3\"\r\n            style={{\r\n              overflow: 'auto',\r\n              fontSize: '0.75rem',\r\n              maxHeight: '60vh',\r\n              border: '1px solid rgb(188, 206, 235)',\r\n            }}\r\n          >\r\n            <Table className=\"mt-4\" striped>\r\n              <thead>\r\n                <tr>\r\n                  <th>{translate('weather_country')}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {!loading &&\r\n                  data.getCountries\r\n                    .filter(country =>\r\n                      country.name.toLowerCase().includes(val.toLowerCase())\r\n                    )\r\n                    .map(c => (\r\n                      <tr key={`${c.name}`}>\r\n                        <td>\r\n                          <Button\r\n                            href=\"#\"\r\n                            role=\"button\"\r\n                            onClick={() => getCountryData(c.capital, c.name)}\r\n                            variant=\"link\"\r\n                          >\r\n                            {c.name}\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n          <Col\r\n            ref={weatherRef}\r\n            style={{ textAlign: 'center', float: 'left' }}\r\n            sm={12}\r\n            xs={12}\r\n            md={{ span: 8, offset: 1 }}\r\n            className=\"pr-0 pl-0\"\r\n          >\r\n            {forecast !== null && (\r\n              <div\r\n                style={{\r\n                  width: '100%',\r\n                  border: '1px rgb(188, 206, 235) solid',\r\n                }}\r\n                className=\"rounded\"\r\n              >\r\n                <h3 className=\"mt-3\">{forecast.country}</h3>\r\n                <p>\r\n                  <strong>{translate('weather_capital')}</strong>{' '}\r\n                  {forecast.weather.location.name}\r\n                </p>\r\n                <Row className=\"pb-3\">\r\n                  {forecast.weather.forecast.forecastday.map(day => {\r\n                    const date = new Date(day.date_epoch * 1000);\r\n                    return (\r\n                      <Col\r\n                        sm={3}\r\n                        xs={12}\r\n                        key={`${day.date}`}\r\n                        className=\"mr-auto ml-auto pl-auto pr-auto mb-2 pb-auto\"\r\n                        style={{ maxWidth: '20rem' }}\r\n                      >\r\n                        <Card\r\n                          bg=\"info\"\r\n                          style={{\r\n                            width: '100%',\r\n                            height: '25rem',\r\n                            position: 'relative',\r\n                          }}\r\n                          className=\"text-center\"\r\n                        >\r\n                          <Card.Header as=\"h5\" style={{ color: 'white' }}>\r\n                            {translate(date.toDateString().substring(0, 3))}\r\n                          </Card.Header>\r\n                          <div\r\n                            className=\"d-flex\"\r\n                            style={{ justifyContent: 'center' }}\r\n                          >\r\n                            {' '}\r\n                            <Card.Img\r\n                              variant=\"top\"\r\n                              src={day.day.condition.icon}\r\n                              alt={day.day.condition.text}\r\n                              title={day.day.condition.text}\r\n                              style={{ height: '70px', width: '70px' }}\r\n                            />\r\n                          </div>\r\n\r\n                          <Card.Body style={{ color: 'white' }}>\r\n                            <Card.Title>{`${date.getDate()}.${date.getMonth() +\r\n                              1}.${date.getFullYear()}`}</Card.Title>\r\n                            <Card.Text>{`${day.day.condition.text}`}</Card.Text>\r\n                          </Card.Body>\r\n                          <ListGroup\r\n                            className=\"list-group-flush\"\r\n                            style={{ fontSize: '0.7rem' }}\r\n                          >\r\n                            <ListGroupItem>\r\n                              <strong>Max: {day.day.maxtemp_c}&#8451;</strong>\r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                              <strong>Min: {day.day.mintemp_c}&#8451;</strong>\r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                              <strong>\r\n                                {translate('weather_avg')} {day.day.avgtemp_c}\r\n                                &#8451;\r\n                              </strong>\r\n                            </ListGroupItem>\r\n                          </ListGroup>\r\n                        </Card>\r\n                      </Col>\r\n                    );\r\n                  })}\r\n                </Row>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nWeather.propTypes = {\r\n  me: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n};\r\n\r\nWeather.defaultProps = {\r\n  me: undefined,\r\n};\r\n\r\nexport default Weather;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Accordion, Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { GET_LAUNCH_DATA } from '../services/queries';\r\nimport rocket from '../util/img/rocket.png';\r\nimport translate from '../util/localization/i18n';\r\nimport LoadingIcon from './LoadingIcon';\r\n\r\nconst Space = ({ me }) => {\r\n  const [t, setT] = useState({});\r\n  const [filter, setFilter] = useState({\r\n    rocket: 'all',\r\n    order: 'desc',\r\n    scope: 'all',\r\n  });\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const {\r\n    data: { getLaunchData },\r\n    loading,\r\n  } = useQuery(GET_LAUNCH_DATA);\r\n\r\n  useEffect(() => {\r\n    return () => clearInterval(intervalId);\r\n  }, [intervalId]);\r\n\r\n  useEffect(() => window.scrollTo(0, 0), []);\r\n\r\n  const getTime = useCallback(\r\n    (launchDate, missionName, element) => {\r\n      if (missionName === t.missionName) {\r\n        clearInterval(intervalId);\r\n        setT({});\r\n      } else {\r\n        clearInterval(intervalId);\r\n        setT({});\r\n        const interval = setInterval(() => {\r\n          let now = new Date().getTime();\r\n          now /= 1000;\r\n          const distance = launchDate - now;\r\n\r\n          const days = Math.floor(distance / (60 * 60 * 24));\r\n          const hours = Math.floor((distance % (60 * 60 * 24)) / (60 * 60));\r\n          const minutes = Math.floor((distance % (60 * 60)) / 60);\r\n          const seconds = Math.floor(distance % 60);\r\n\r\n          if (distance > 0) {\r\n            setT({\r\n              time: `${days}${translate('space_days')} : ${hours}${translate(\r\n                'space_hours'\r\n              )} : ${minutes}${translate(\r\n                'space_minutes'\r\n              )} : ${seconds}${translate('space_seconds')}`,\r\n              missionName,\r\n              element,\r\n              launchDate,\r\n            });\r\n          } else {\r\n            setT({\r\n              time: translate('space_expired'),\r\n              missionName,\r\n              element,\r\n              launchDate,\r\n            });\r\n          }\r\n        }, 1000);\r\n\r\n        setIntervalId(interval);\r\n      }\r\n\r\n      return null;\r\n    },\r\n    [intervalId, t]\r\n  );\r\n\r\n  const filterMissions = useCallback(() => {\r\n    let missions = [];\r\n\r\n    if (filter.scope === 'all') {\r\n      missions = JSON.parse(getLaunchData.value);\r\n    } else {\r\n      missions = JSON.parse(getLaunchData.value).filter(msn => msn.upcoming);\r\n    }\r\n\r\n    if (filter.rocket !== 'all') {\r\n      missions = missions.filter(\r\n        msn => msn.rocket.rocket_name === filter.rocket\r\n      );\r\n    }\r\n\r\n    if (filter.order === 'desc') {\r\n      return missions.sort((a, b) => a.launch_date_unix - b.launch_date_unix);\r\n    }\r\n\r\n    return missions.sort((a, b) => b.launch_date_unix - a.launch_date_unix);\r\n  }, [filter, getLaunchData]);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      const openCard = filterMissions();\r\n      if (openCard[t.element] !== undefined) {\r\n        getTime(\r\n          openCard[t.element].launch_date_unix,\r\n          openCard[t.element].mission_name,\r\n          t.element\r\n        );\r\n      }\r\n    }\r\n  }, [filter]);\r\n\r\n  if (!me)\r\n    return (\r\n      <div style={{ minHeight: '100vh' }} className=\"container text-center\">\r\n        <div style={{ marginTop: '50px' }}>\r\n          <h4>\r\n            <u>{translate('space_nolog')}</u>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  if (loading) {\r\n    return <LoadingIcon />;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"container pt-4 mt-4\"\r\n      style={{ minHeight: '100vh', marginBottom: '40px' }}\r\n    >\r\n      <h2 className=\"pb-3 mb-3\" style={{ textAlign: 'center' }}>\r\n        {translate('space_h1')}\r\n      </h2>\r\n      <Container className=\"mb-4\">\r\n        <Row>\r\n          <Col xs={12} sm={12} md={4}>\r\n            {translate('space_filter1')}\r\n            <select\r\n              style={{ width: '100%' }}\r\n              onChange={event =>\r\n                setFilter({ ...filter, rocket: event.target.value })\r\n              }\r\n            >\r\n              <option value=\"all\">{translate('space_filter3_1')}</option>\r\n              {!loading &&\r\n                JSON.parse(getLaunchData.value)\r\n                  .map(mis => mis.rocket.rocket_name)\r\n                  .filter((v, i, a) => a.indexOf(v) === i)\r\n                  .map(rname => (\r\n                    <option key={rname} value={rname}>\r\n                      {rname}\r\n                    </option>\r\n                  ))}\r\n            </select>\r\n          </Col>\r\n          <Col xs={12} md={4} sm={12}>\r\n            {translate('space_filter2')}\r\n            <select\r\n              style={{ width: '100%' }}\r\n              onChange={event =>\r\n                setFilter({ ...filter, order: event.target.value })\r\n              }\r\n            >\r\n              <option value=\"desc\">{translate('space_filter2_1')}</option>\r\n              <option value=\"asc\">{translate('space_filter2_2')}</option>\r\n            </select>\r\n          </Col>\r\n          <Col xs={12} sm={12} md={4}>\r\n            {translate('space_filter3')}\r\n            <select\r\n              style={{ width: '100%' }}\r\n              onChange={event =>\r\n                setFilter({ ...filter, scope: event.target.value })\r\n              }\r\n            >\r\n              <option value=\"all\">{translate('space_filter3_1')}</option>\r\n              <option value=\"upcoming\">{translate('space_filter3_2')}</option>\r\n            </select>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Accordion>\r\n        {!loading &&\r\n          filterMissions().map((launch, i) => (\r\n            <Card key={`${launch.mission_name}`}>\r\n              <Accordion.Toggle\r\n                as={Card.Header}\r\n                eventKey={`${i}`}\r\n                onClick={() =>\r\n                  getTime(launch.launch_date_unix, launch.mission_name, i)\r\n                }\r\n              >\r\n                {launch.mission_name}{' '}\r\n                <div style={{ float: 'right' }}>\r\n                  {launch.launch_date_utc.substring(0, 10)}\r\n                </div>\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey={`${i}`}>\r\n                <Card.Body>\r\n                  <h4 style={{ textAlign: 'center' }}>\r\n                    {translate('space_details')}\r\n                  </h4>\r\n                  <Container className=\"pt-3\">\r\n                    <Row>\r\n                      <Col\r\n                        sm={{ span: 12, order: 2 }}\r\n                        md={{ order: 1, span: 8 }}\r\n                        xs={{ span: 12, order: 2 }}\r\n                      >\r\n                        <dl>\r\n                          <dt>{translate('space_accordion1')}</dt>\r\n                          {launch.details ? (\r\n                            <dd>{launch.details}</dd>\r\n                          ) : (\r\n                            <dd>TBA</dd>\r\n                          )}\r\n                          <dt>{translate('space_accordion2')}</dt>\r\n                          {launch.rocket.rocket_id ? (\r\n                            <dd>{launch.rocket.rocket_name}</dd>\r\n                          ) : (\r\n                            <dd>TBA</dd>\r\n                          )}\r\n                          <dt>{translate('space_accordion3')}</dt>\r\n                          {launch.launch_site.site_id ? (\r\n                            <dd>{launch.launch_site.site_name_long}</dd>\r\n                          ) : (\r\n                            <dd>TBA</dd>\r\n                          )}\r\n                          <dt>{translate('space_accordion4')}</dt>\r\n                          <dd>{t.time}</dd>\r\n                        </dl>\r\n                      </Col>\r\n                      <Col\r\n                        xs={{ order: 1, span: 12 }}\r\n                        sm={{ order: 1, span: 12 }}\r\n                        md={{ order: 2 }}\r\n                        className=\"pb-3 text-center\"\r\n                      >\r\n                        <img\r\n                          src={rocket}\r\n                          alt=\"rocket\"\r\n                          style={{ height: '10rem' }}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          ))}\r\n        {!loading && filterMissions().length === 0 && (\r\n          <div className=\"text-center mt-5 pt-5\">\r\n            <strong>{translate('space_filter_fail')}</strong>\r\n          </div>\r\n        )}\r\n      </Accordion>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpace.propTypes = {\r\n  me: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n};\r\n\r\nSpace.defaultProps = {\r\n  me: undefined,\r\n};\r\n\r\nexport default withRouter(Space);\r\n","import React from 'react';\r\nimport { Container, Col, Row, Card, Button } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport translate from '../util/localization/i18n';\r\n\r\nconst ServiceChoice = ({ history }) => {\r\n  const handleClick = val => {\r\n    switch (val) {\r\n      case 'impress':\r\n        history.push('/s/users');\r\n        break;\r\n      case 'space':\r\n        history.push('/service/space');\r\n        break;\r\n      case 'weather':\r\n        history.push('/service/weather');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"p-4 fluid\" style={{ marginBottom: '80px' }}>\r\n      <Row>\r\n        <Col md={4} xs={12} className=\"d-flex align-items-stretch mb-3\">\r\n          <Card bg=\"success\" style={{ width: '100%', position: 'relative' }}>\r\n            <Card.Header>{translate('sc_c1_header')}</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>{translate('sc_c1_title')}</Card.Title>\r\n              <Card.Text as=\"div\">\r\n                <p className=\"p-0 m-0\">{translate('sc_c1_p1')}</p>\r\n                <p className=\"p-0 m-0\">{translate('sc_c1_p2')}</p>\r\n                <p>{translate('sc_c1_p3')}</p>\r\n              </Card.Text>\r\n              <Button variant=\"primary\" onClick={() => handleClick('impress')}>\r\n                {translate('sc_c1_button')}\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4} xs={12} className=\"d-flex align-items-stretch mb-3\">\r\n          <Card\r\n            bg=\"info\"\r\n            text=\"white\"\r\n            style={{ width: '100%', position: 'relative' }}\r\n          >\r\n            <Card.Header>{translate('sc_c2_header')}</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>{translate('sc_c2_title')}</Card.Title>\r\n              <Card.Text>{translate('sc_c2_text')}</Card.Text>\r\n              <Button variant=\"primary\" onClick={() => handleClick('weather')}>\r\n                {translate('sc_c2_button')}\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4} xs={12} className=\"d-flex align-items-stretch mb-3\">\r\n          <Card bg=\"secondary\" style={{ width: '100%', position: 'relative' }}>\r\n            <Card.Header>SpaceX API</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>{translate('sc_c3_title')}</Card.Title>\r\n              <Card.Text>{translate('sc_c3_text')}</Card.Text>\r\n              <Button variant=\"primary\" onClick={() => handleClick('space')}>\r\n                SpaceX API\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nServiceChoice.propTypes = {\r\n  history: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\r\n};\r\n\r\nexport default withRouter(ServiceChoice);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Alert, Image } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { useQuery, useApolloClient } from '@apollo/react-hooks';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { setUser } from './reducers/user';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport UserPage from './components/UserPage';\r\nimport UserSearch from './components/UserSearch';\r\nimport ChatPage from './components/ChatPage';\r\nimport { ME } from './services/queries';\r\nimport MainPage from './components/MainPage';\r\nimport Weather from './components/Weather';\r\nimport Space from './components/Space';\r\nimport ServiceChoice from './components/ServiceChoice';\r\nimport { setLocale } from './util/localization/i18n';\r\nimport pic1 from './util/img/1.jpg';\r\nimport './css/index.css';\r\n\r\nconst App = ({ notification, setUser }) => {\r\n  const client = useApolloClient();\r\n\r\n  const [lang, setLang] = useState(document.documentElement.lang || 'en');\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(window.localStorage.getItem('loggedUser'));\r\n    if (user) {\r\n      setUser(user);\r\n    }\r\n  }, [setUser]);\r\n\r\n  const setLanguage = lang => {\r\n    setLocale(lang);\r\n    setLang(lang);\r\n    document.documentElement.lang = lang;\r\n  };\r\n\r\n  const check = useQuery(ME);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Header\r\n          user={check.data.me}\r\n          client={client}\r\n          setLocale={setLanguage}\r\n          lang={lang}\r\n        />\r\n        {notification.text !== undefined && (\r\n          <Alert className=\"mb-0\" variant={notification.style}>\r\n            {notification.text}\r\n          </Alert>\r\n        )}\r\n        <div>\r\n          <Route\r\n            exact\r\n            path=\"/user/:username\"\r\n            render={({ match }) => {\r\n              return <UserPage foo={match} me={check.data.me} />;\r\n            }}\r\n          />\r\n          <Route\r\n            path=\"/s/users\"\r\n            render={() => <UserSearch me={check.data.me} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return (\r\n                <>\r\n                  <MainPage me={check.data.me} client={client} />\r\n                  {check.data.me && (\r\n                    <>\r\n                      <div style={{ marginBottom: '50px' }}>\r\n                        <Image\r\n                          src={pic1}\r\n                          style={{\r\n                            width: '100%',\r\n                            height: '50vh',\r\n                            objectFit: 'cover',\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <ServiceChoice />\r\n                    </>\r\n                  )}\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/chat/:id\"\r\n            render={({ match }) => (\r\n              <ChatPage me={check.data.me} match={match} client={client} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/service/weather\"\r\n            render={() => <Weather me={check.data.me} client={client} />}\r\n          />\r\n          <Route\r\n            path=\"/service/space\"\r\n            render={() => <Space me={check.data.me} />}\r\n          />\r\n        </div>\r\n      </Router>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    notification: state.notification,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setUser,\r\n};\r\n\r\nApp.propTypes = {\r\n  notification: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\r\n    .isRequired,\r\n  setUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport store from './store';\r\nimport client from './apollo';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo2.0a19e842.jpg\";"],"sourceRoot":""}