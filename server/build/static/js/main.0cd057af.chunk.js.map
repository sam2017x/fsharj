{"version":3,"sources":["util/img/twitter.png","util/img/insta.png","util/img/fb.png","util/img/wazzap.png","util/img/nasa.jpg","util/img/impress2.jpg","util/img/weather.jpg","util/img/rocket.png","util/img/1.jpg","reducers/user.js","reducers/notification.js","store.js","apollo.js","components/Togglable.jsx","hooks/index.js","services/queries.js","components/Signup.jsx","components/Login.jsx","components/Header.jsx","components/Footer.jsx","components/LoadingIcon.jsx","components/UserPage.jsx","components/UserSearch.jsx","components/Message.jsx","components/Messages.jsx","components/ChatPage.jsx","components/MainPage.jsx","components/Weather.jsx","components/Space.jsx","components/ServiceChoice.jsx","App.jsx","index.js","util/img/logo2.jpg"],"names":["module","exports","__webpack_require__","p","setUser","info","dispatch","type","data","token","username","id","level","posts","friends","reducer","state","arguments","length","undefined","action","window","localStorage","setItem","JSON","stringify","setNotification","text","style","duration","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","setTimeout","stop","_x","apply","this","combineReducers","user","userReducer","notification","notificationReducer","store","createStore","applyMiddleware","thunk","httpLink","createHttpLink","uri","wsLink","WebSocketLink","options","reconnect","authLink","setContext","_","headers","parse","getItem","_objectSpread","authorization","concat","link","split","_ref2","query","_getMainDefinition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","Togglable","React","forwardRef","props","ref","_useState","useState","_useState2","slicedToArray","toggle","setToggle","toggleVisibility","useImperativeHandle","react_default","createElement","Fragment","Button","variant","onClick","className","children","defaultProps","useField","value","setValue","onChange","event","target","reset","MESSAGE_SUBSCRIPTION","gql","_templateObject","COUNTRIES","_templateObject2","REMOVE_MESSAGE","_templateObject3","GET_LAUNCH_DATA","_templateObject4","GET_WEATHER_DATA","_templateObject5","LOGIN","_templateObject6","SIGN","_templateObject7","ALL_USERS","_templateObject8","CREATE_ROOM","_templateObject9","GET_USER_INFO","_templateObject10","GET_CHATROOM_INFO","_templateObject11","ADD_FRIEND","_templateObject12","SEND_MSG","_templateObject13","ME","_templateObject14","mapDispatchToProps","connect","toggleForm","uname","pw","_useMutation","useMutation","signup","handleSign","e","_ref3","loading","preventDefault","variables","password","sent","addUser","t0","message","Form","inline","onSubmit","Control","assign","autoFocus","placeholder","size","userLogin","ufields","pfields","loggedUser","handleLogin","login","resetStore","maxLength","width","Header","history","formToggle","createRef","current","Navbar","expand","collapseOnSelect","bg","sticky","Brand","href","as","react_router_dom","to","Image","roundedCircle","alt","src","logo","height","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","Link","color","components_Togglable","components_Login","components_Signup","Text","textUnderlinePosition","clear","push","withRouter","Footer","paddingTop","paddingBottom","bottom","backgroundColor","fb","rounded","ig","twitter","whatsapp","marginBottom","LoadingIcon","Container","minHeight","Row","Col","alignItems","justifyContent","Spinner","animation","role","UserPage","foo","me","_useQuery","useQuery","params","error","useEffect","scrollTo","createRoom","handleChat","senderId","receiverId","room","_x2","textAlign","marginTop","substring","components_LoadingIcon","borderBottom","getUserInfo","Table","map","friend","i","key","searchField","addFriend","_useMutation3","focusRef","handleFriendAdd","_callee2","_context2","_x3","handleClear","focus","allUsers","Group","Label","usr","filter","toLowerCase","includes","find","frd","disabled","Message","remove","time","Date","date","sender","xs","order","sm","span","Toast","maxWidth","overflow","onClose","toLocaleString","Body","fontSize","fontWeight","closeButton","Messages","scrollToMsg","messages","removeMessage","msg","components_Message","ChatPage","match","setMsg","_useState3","_useState4","update","setUpdate","scrollRef","useRef","useCallback","scrollTop","scrollHeight","useSubscription","onSubscriptionData","messageAdded","subscriptionData","dataInStore","readQuery","getChatroomInfo","ChatPage_objectSpread","writeQuery","sendMsg","handleRemoveMessage","idArr","idx","indexOf","splice","handleMessage","_ref4","resp","sendMessage","display","float","users","overflowY","overflowX","position","border","components_Messages","InputGroup","Prepend","FormControl","resize","maxHeight","aria-label","MainPage","index","setIndex","direction","setDirection","lg","Carousel","activeIndex","onSelect","selectedIndex","impress","objectFit","Caption","nasa","weather","Jumbotron","marginLeft","Weather","val","setVal","forecast","setForecast","weatherData","weatherRef","getCountryData","capital","country","_data","getWeatherData","innerWidth","scrollIntoView","block","behavior","aria-describedby","md","striped","getCountries","name","c","offset","location","forecastday","day","date_epoch","Card","toDateString","Img","condition","icon","Title","getDate","getMonth","getFullYear","ListGroup","ListGroupItem","maxtemp_c","mintemp_c","avgtemp_c","Space","t","setT","rocket","scope","setFilter","_useState5","_useState6","intervalId","setIntervalId","getLaunchData","clearInterval","getTime","launchDate","missionName","element","interval","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","filterMissions","missions","msn","upcoming","rocket_name","sort","b","launch_date_unix","openCard","mission_name","Space_objectSpread","mis","v","rname","Accordion","launch","eventKey","launch_date_utc","details","rocket_id","launch_site","site_id","site_name_long","handleClick","useApolloClient","check","components_Header","Alert","react_router","exact","path","render","components_UserPage","components_UserSearch","components_MainPage","pic1","components_ServiceChoice","components_ChatPage","components_Weather","components_Space","components_Footer","ReactDOM","react_common_esm","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0cd057af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twitter.1841e14c.png\";","module.exports = __webpack_public_path__ + \"static/media/insta.a5f23260.png\";","module.exports = __webpack_public_path__ + \"static/media/fb.5ce4bc0c.png\";","module.exports = __webpack_public_path__ + \"static/media/wazzap.c58ba685.png\";","module.exports = __webpack_public_path__ + \"static/media/nasa.d2d99ea7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/impress2.9460a995.jpg\";","module.exports = __webpack_public_path__ + \"static/media/weather.6d5cd23c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rocket.3d3c32aa.png\";","module.exports = __webpack_public_path__ + \"static/media/1.75e3295a.jpg\";","const reducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      window.localStorage.setItem('loggedUser', JSON.stringify(action.data));\r\n      return action.data;\r\n    case 'SET_USER':\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userLogin = info => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'LOGIN',\r\n      data: {\r\n        token: info.value,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const setUser = info => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'SET_USER',\r\n      data: {\r\n        token: info.token,\r\n        username: info.username,\r\n        id: info.id,\r\n        level: info.level,\r\n        posts: info.posts,\r\n        friends: info.friends,\r\n      },\r\n    });\r\n  };\r\n};\r\nexport default reducer;\r\n","const reducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'NOTIFICATION':\r\n      return action.data;\r\n    case 'CLEAR':\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setNotification = (text, style, duration) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'NOTIFICATION',\r\n      data: {\r\n        text,\r\n        style,\r\n      },\r\n    });\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: 'CLEAR',\r\n      });\r\n    }, duration * 1000);\r\n  };\r\n};\r\n\r\nexport default reducer;\r\n","import thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport userReducer from './reducers/user';\r\nimport notificationReducer from './reducers/notification';\r\n\r\nconst reducer = combineReducers({\r\n  user: userReducer,\r\n  notification: notificationReducer,\r\n});\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import { ApolloClient } from 'apollo-client';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { setContext } from 'apollo-link-context';\r\nimport { split } from 'apollo-link';\r\nimport { WebSocketLink } from 'apollo-link-ws';\r\nimport { getMainDefinition } from 'apollo-utilities';\r\n\r\n// eslint-disable-next-line new-cap\r\nconst httpLink = new createHttpLink({\r\n  uri: 'http://localhost:4000/graphql',\r\n});\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: `ws://localhost:4000/graphql`,\r\n  options: { reconnect: true },\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = JSON.parse(localStorage.getItem('loggedUser'));\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `bearer ${token.token}` : null,\r\n    },\r\n  };\r\n});\r\n\r\nconst link = split(\r\n  ({ query }) => {\r\n    const { kind, operation } = getMainDefinition(query);\r\n    return kind === 'OperationDefinition' && operation === 'subscription';\r\n  },\r\n  wsLink,\r\n  authLink.concat(httpLink)\r\n);\r\n\r\nconst client = new ApolloClient({\r\n  link,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default client;\r\n","import React, { useState, useImperativeHandle } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [toggle, setToggle] = useState('none');\r\n\r\n  const toggleVisibility = () => {\r\n    setToggle('none');\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n    };\r\n  });\r\n  return (\r\n    <>\r\n      {toggle === 'none' && (\r\n        <>\r\n          <Button\r\n            variant=\"warning\"\r\n            onClick={() => setToggle('log')}\r\n            className=\"mr-sm-1\"\r\n          >\r\n            Log in\r\n          </Button>\r\n          {` | `}\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => setToggle('sign')}\r\n            className=\"ml-sm-1\"\r\n          >\r\n            Sign up\r\n          </Button>\r\n        </>\r\n      )}\r\n      {toggle === 'log' && <>{props.children[0]} </>}\r\n      {toggle === 'sign' && <>{props.children[1]}</>}\r\n    </>\r\n  );\r\n});\r\n\r\nTogglable.propTypes = {\r\n  children: PropTypes.arrayOf(\r\n    PropTypes.oneOfType([PropTypes.element, PropTypes.element])\r\n  ),\r\n};\r\n\r\nTogglable.defaultProps = {\r\n  children: () => [],\r\n};\r\n\r\nexport default Togglable;\r\n","import { useState } from 'react';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const useField = type => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const reset = () => {\r\n    setValue('');\r\n  };\r\n\r\n  return {\r\n    value,\r\n    onChange,\r\n    type,\r\n    reset,\r\n  };\r\n};\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const MESSAGE_SUBSCRIPTION = gql`\r\n  subscription onMessageAdded($id: String) {\r\n    messageAdded(id: $id) {\r\n      message\r\n      id\r\n      date\r\n      sender {\r\n        id\r\n        username\r\n      }\r\n      room {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const COUNTRIES = gql`\r\n  {\r\n    getCountries {\r\n      name\r\n      alpha2Code\r\n      capital\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REMOVE_MESSAGE = gql`\r\n  mutation removeMessage($id: ID, $room: ID) {\r\n    removeMessage(id: $id, room: $room) {\r\n      message\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_LAUNCH_DATA = gql`\r\n  {\r\n    getLaunchData {\r\n      value\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_WEATHER_DATA = gql`\r\n  mutation getWeatherData($capital: String) {\r\n    getWeatherData(capital: $capital) {\r\n      value\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      value\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SIGN = gql`\r\n  mutation sign($username: String!, $password: String!) {\r\n    addUser(username: $username, password: $password) {\r\n      username\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ALL_USERS = gql`\r\n  {\r\n    allUsers {\r\n      username\r\n      id\r\n      posts\r\n      level\r\n      rooms {\r\n        id\r\n      }\r\n      friends {\r\n        username\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_ROOM = gql`\r\n  mutation makeRoom($senderId: String, $receiverId: String, $title: String) {\r\n    createRoom(senderId: $senderId, receiverId: $receiverId, title: $title) {\r\n      users {\r\n        username\r\n        id\r\n      }\r\n      id\r\n      title\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER_INFO = gql`\r\n  query getUserInfo($username: String) {\r\n    getUserInfo(username: $username) {\r\n      posts\r\n      username\r\n      level\r\n      id\r\n      friends {\r\n        username\r\n        posts\r\n        level\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_CHATROOM_INFO = gql`\r\n  query getChatroomInfo($id: String) {\r\n    getChatroomInfo(id: $id) {\r\n      id\r\n      users {\r\n        id\r\n        username\r\n      }\r\n      messages {\r\n        id\r\n        message\r\n        sender {\r\n          id\r\n          username\r\n        }\r\n        room {\r\n          id\r\n        }\r\n        date\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_FRIEND = gql`\r\n  mutation addFriend($id: ID!) {\r\n    addFriend(id: $id) {\r\n      id\r\n      username\r\n      posts\r\n      level\r\n      friends {\r\n        username\r\n        id\r\n        posts\r\n        level\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SEND_MSG = gql`\r\n  mutation sendMessage($id: String, $message: String, $senderId: String) {\r\n    sendMessage(roomId: $id, message: $message, sender: $senderId) {\r\n      id\r\n      message\r\n      sender {\r\n        id\r\n        username\r\n      }\r\n      date\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ME = gql`\r\n  {\r\n    me {\r\n      username\r\n      id\r\n      rooms {\r\n        id\r\n      }\r\n      friends {\r\n        username\r\n        id\r\n        posts\r\n        level\r\n      }\r\n      posts\r\n      level\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useField } from '../hooks/index';\r\nimport { SIGN } from '../services/queries';\r\nimport { setNotification } from '../reducers/notification';\r\n\r\nconst Signup = ({ toggleForm, setNotification }) => {\r\n  const uname = useField('text');\r\n  const pw = useField('password');\r\n\r\n  const [signup] = useMutation(SIGN);\r\n\r\n  const handleSign = async e => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const { loading, data } = await signup({\r\n        variables: {\r\n          username: uname.value,\r\n          password: pw.value,\r\n        },\r\n      });\r\n      toggleForm();\r\n\r\n      if (!loading) {\r\n        setNotification(\r\n          `Signed up successfully as ${data.addUser.username}!`,\r\n          'success',\r\n          5\r\n        );\r\n      }\r\n    } catch (error) {\r\n      setNotification(`${error.message}`, 'danger', 5);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form inline onSubmit={e => handleSign(e)}>\r\n        <Form.Control\r\n          autoFocus\r\n          {...uname}\r\n          reset={null}\r\n          placeholder=\"Username\"\r\n          className=\"mr-sm-3\"\r\n        />\r\n        <Form.Control\r\n          {...pw}\r\n          reset={null}\r\n          placeholder=\"Password\"\r\n          className=\"mr-sm-3\"\r\n        />\r\n        <Button type=\"submit\" size=\"sm\" variant=\"success\" className=\"mr-1\">\r\n          Sign up\r\n        </Button>\r\n        <Button size=\"sm\" variant=\"light\" onClick={() => toggleForm()}>\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setNotification,\r\n};\r\n\r\nSignup.propTypes = {\r\n  setNotification: PropTypes.func.isRequired,\r\n  toggleForm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Signup);\r\n","import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useField } from '../hooks/index';\r\nimport { userLogin } from '../reducers/user';\r\nimport { LOGIN } from '../services/queries';\r\nimport { setNotification } from '../reducers/notification';\r\n\r\nconst Login = ({ setNotification, userLogin, toggleForm, client }) => {\r\n  const ufields = useField('text');\r\n  const pfields = useField('password');\r\n  const [loggedUser] = useMutation(LOGIN);\r\n\r\n  const handleLogin = async e => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const { loading, data } = await loggedUser({\r\n        variables: {\r\n          username: ufields.value,\r\n          password: pfields.value,\r\n        },\r\n      });\r\n      if (!loading) {\r\n        // Cache manipulation code reference below.\r\n\r\n        /*const dataInStore = client.readQuery({ query: ME });\r\n        console.log('DATA CACHESSA ALUKSI', dataInStore);\r\n        console.log('INCOMING DATA', data);\r\n        dataInStore.me = {\r\n          id: data.login.id,\r\n          username: data.login.username,\r\n          posts: data.login.posts,\r\n          level: data.login.level,\r\n          friends: data.login.friends,\r\n          __typename: 'User',\r\n        };\r\n        console.log('MUOKKAUKSEN JALKEEN', dataInStore);\r\n        client.writeQuery({\r\n          query: ME,\r\n          data: dataInStore,\r\n        });*/\r\n\r\n        setNotification(`Welcome ${ufields.value}`, 'success', 5);\r\n        userLogin(data.login);\r\n\r\n        // resetStore() clears the cached store and refetches all open queries.\r\n        // Important to remember when creating new user session.\r\n        client.resetStore();\r\n      }\r\n    } catch (error) {\r\n      setNotification(`${error.message}`, 'danger', 5);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form inline onSubmit={event => handleLogin(event)}>\r\n        <Form.Control\r\n          maxLength={20}\r\n          autoFocus\r\n          {...ufields}\r\n          reset={null}\r\n          placeholder=\"Username\"\r\n          className=\"mr-sm-3\"\r\n        />\r\n        <Form.Control\r\n          maxLength={20}\r\n          width={10}\r\n          {...pfields}\r\n          reset={null}\r\n          placeholder=\"Password\"\r\n          className=\"mr-sm-3\"\r\n        />\r\n        <Button type=\"submit\" size=\"sm\" variant=\"warning\" className=\"mr-1\">\r\n          Login\r\n        </Button>\r\n        <Button size=\"sm\" variant=\"light\" onClick={() => toggleForm()}>\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  user: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\r\n  userLogin: PropTypes.func.isRequired,\r\n  setNotification: PropTypes.func.isRequired,\r\n  toggleForm: PropTypes.func.isRequired,\r\n  client: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  userLogin,\r\n  setNotification,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import React from 'react';\r\nimport { Nav, Navbar, Button, NavDropdown, Image } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { setUser } from '../reducers/user';\r\nimport Togglable from './Togglable';\r\nimport Signup from './Signup';\r\nimport Login from './Login';\r\nimport logo from '../util/img/logo2.jpg';\r\n\r\nconst Header = ({ history, user, setUser, client }) => {\r\n  const styles = {\r\n    color: 'white',\r\n  };\r\n\r\n  const formToggle = React.createRef();\r\n  const toggleForm = () => {\r\n    formToggle.current.toggleVisibility();\r\n  };\r\n\r\n  const logout = () => {\r\n    window.localStorage.clear();\r\n    setUser({});\r\n    client.resetStore();\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Navbar expand=\"md\" collapseOnSelect bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n      <Navbar.Brand href=\"/\" as=\"span\">\r\n        <Link to=\"/\">\r\n          <Image\r\n            roundedCircle\r\n            alt=\"logo\"\r\n            src={logo}\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n          />\r\n        </Link>\r\n        {' FSHT'}\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavDropdown title=\"Services\" id=\"collasible-nav-dropdown\">\r\n            <NavDropdown.Item as=\"span\">\r\n              <Link to=\"/service/space\">SpaceX API</Link>\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item as=\"span\">\r\n              <Link to=\"/service/weather\">Weather App</Link>\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n          <Nav.Link href=\"/s/users\" as=\"span\">\r\n            <Link to=\"/s/users\" style={styles}>\r\n              Users\r\n            </Link>\r\n          </Nav.Link>\r\n        </Nav>\r\n        {!user && (\r\n          <>\r\n            <Togglable ref={formToggle} color=\"warning\">\r\n              <Login toggleForm={toggleForm} client={client} />\r\n              <Signup toggleForm={toggleForm} />\r\n            </Togglable>\r\n          </>\r\n        )}\r\n        {user && (\r\n          <>\r\n            <Navbar.Text as=\"span\">\r\n              <span style={{ color: 'white' }}>Signed in as: </span>\r\n              <Link\r\n                className=\"mr-2\"\r\n                to={`/user/${user.username}`}\r\n                style={{ color: 'black', textUnderlinePosition: 'auto' }}\r\n              >\r\n                {user.username}\r\n              </Link>\r\n              |\r\n              <Button\r\n                size=\"sm\"\r\n                className=\"ml-2\"\r\n                onClick={() => logout()}\r\n                variant=\"danger\"\r\n              >\r\n                Logout\r\n              </Button>\r\n            </Navbar.Text>\r\n          </>\r\n        )}\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setUser,\r\n};\r\n\r\nHeader.propTypes = {\r\n  client: PropTypes.oneOfType([PropTypes.object]).isRequired,\r\n  user: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.string,\r\n    PropTypes.string,\r\n  ]),\r\n  history: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\r\n  setUser: PropTypes.func.isRequired,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  user: undefined,\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    null,\r\n    mapDispatchToProps\r\n  )(Header)\r\n);\r\n","import React from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport twitter from '../util/img/twitter.png';\r\nimport ig from '../util/img/insta.png';\r\nimport fb from '../util/img/fb.png';\r\nimport whatsapp from '../util/img/wazzap.png';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        paddingTop: '40px',\r\n        paddingBottom: '40px',\r\n        bottom: '0',\r\n        width: '100%',\r\n        backgroundColor: '#343a40',\r\n        color: '#808080',\r\n      }}\r\n      className=\"text-center\"\r\n    >\r\n      <p>\r\n        <strong>Application Mashup</strong>\r\n      </p>\r\n      <p>\r\n        <Image\r\n          src={fb}\r\n          alt=\"facebook\"\r\n          rounded\r\n          style={{ height: '50px', width: '50px' }}\r\n        />\r\n        <Image\r\n          src={ig}\r\n          alt=\"instagram\"\r\n          rounded\r\n          style={{ height: '50px', width: '50px' }}\r\n        />\r\n        <Image\r\n          src={twitter}\r\n          alt=\"twitter\"\r\n          rounded\r\n          style={{ height: '50px', width: '50px' }}\r\n        />\r\n        <Image\r\n          src={whatsapp}\r\n          alt=\"whatsapp\"\r\n          rounded\r\n          style={{ height: '50px', width: '50px' }}\r\n        />\r\n      </p>\r\n      <p style={{marginBottom: '0'}}>&copy; SJ.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Container, Col, Row, Spinner } from 'react-bootstrap';\r\n\r\nconst LoadingIcon = () => (\r\n  <Container style={{ minHeight: '100vh' }}>\r\n    <Row>\r\n      <Col\r\n        className=\"d-flex\"\r\n        style={{\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          height: '100vh',\r\n        }}\r\n      >\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default LoadingIcon;\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { Container, Col, Row, Table, Button } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { setNotification } from '../reducers/notification';\r\nimport { GET_USER_INFO, CREATE_ROOM } from '../services/queries';\r\nimport LoadingIcon from './LoadingIcon';\r\n\r\nconst UserPage = ({ foo, setNotification, history, me }) => {\r\n  const { data, loading, error } = useQuery(GET_USER_INFO, {\r\n    variables: {\r\n      username: foo.params.username,\r\n    },\r\n  });\r\n\r\n  useEffect(() => window.scrollTo(0, 0), []);\r\n\r\n  const [createRoom] = useMutation(CREATE_ROOM);\r\n\r\n  const handleChat = async (senderId, receiverId) => {\r\n    try {\r\n      const room = await createRoom({\r\n        variables: {\r\n          senderId,\r\n          receiverId,\r\n          title: 'awdad',\r\n        },\r\n      });\r\n      setNotification(`Chat started.`, 'success', 5);\r\n      history.push(`/chat/${room.data.createRoom.id}`);\r\n    } catch (error) {\r\n      setNotification(`${error.message}`, 'danger', 5);\r\n    }\r\n  };\r\n\r\n  if (!me)\r\n    return (\r\n      <div style={{ minHeight: '100vh' }} className=\"container text-center\">\r\n        <div style={{ marginTop: '50px' }}>\r\n          <h4>\r\n            <u>Log in to see the user profile.</u>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  if (error)\r\n    return (\r\n      <h2 style={{ textAlign: 'center', marginTop: '20%' }}>\r\n        {error.message.substring(15)}\r\n      </h2>\r\n    );\r\n\r\n  if (loading) return <LoadingIcon />;\r\n\r\n  return (\r\n    <div style={{ minHeight: '100vh' }}>\r\n      <Container>\r\n        <Row\r\n          className=\"mb-4 mt-4\"\r\n          style={{ borderBottom: '1px solid rgb(188, 206, 235)' }}\r\n        >\r\n          <Col>\r\n            <h3 className=\"p-3\">{data.getUserInfo.username}</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5>Posts: {data.getUserInfo.posts || 0}</h5>\r\n          </Col>\r\n          <Col>\r\n            <h5>Level: {data.getUserInfo.level || 'beginner'}</h5>\r\n          </Col>\r\n        </Row>\r\n        {me.username === data.getUserInfo.username && (\r\n          <Row>\r\n            <Col className=\"mt-4\">\r\n              <h5>Friends: </h5>\r\n              <Table size=\"sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Username</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data.getUserInfo.friends &&\r\n                    data.getUserInfo.friends.map((friend, i) => {\r\n                      return (\r\n                        <tr key={`${friend.username}`}>\r\n                          <td>{i + 1}</td>\r\n                          <td>{friend.username}</td>\r\n                          <td>\r\n                            <Button\r\n                              onClick={() =>\r\n                                handleChat(me.id, data.getUserInfo.id)\r\n                              }\r\n                              size=\"sm\"\r\n                            >\r\n                              Chat\r\n                            </Button>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserPage.propTypes = {\r\n  foo: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\r\n  setNotification: PropTypes.func.isRequired,\r\n  history: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\r\n  me: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n};\r\n\r\nUserPage.defaultProps = {\r\n  me: undefined,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setNotification,\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    null,\r\n    mapDispatchToProps\r\n  )(UserPage)\r\n);\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Spinner,\r\n} from 'react-bootstrap';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { useField } from '../hooks/index';\r\nimport { setNotification } from '../reducers/notification';\r\nimport { setUser } from '../reducers/user';\r\nimport { ALL_USERS, ADD_FRIEND, CREATE_ROOM } from '../services/queries';\r\nimport LoadingIcon from './LoadingIcon';\r\n\r\nconst UserSearch = ({ history, me, setNotification }) => {\r\n  const searchField = useField('text');\r\n  const { data, loading } = useQuery(ALL_USERS);\r\n  const [addFriend] = useMutation(ADD_FRIEND);\r\n  const [createRoom] = useMutation(CREATE_ROOM);\r\n  const focusRef = React.createRef();\r\n\r\n  const focus = () => {\r\n    focusRef.current.focus();\r\n  };\r\n\r\n  useEffect(() => window.scrollTo(0, 0), []);\r\n\r\n  const handleChat = async (senderId, receiverId) => {\r\n    try {\r\n      const room = await createRoom({\r\n        variables: {\r\n          senderId,\r\n          receiverId,\r\n          title: 'awdad',\r\n        },\r\n      });\r\n\r\n      setNotification(`Chat started.`, 'success', 5);\r\n      history.push(`/chat/${room.data.createRoom.id}`);\r\n    } catch (error) {\r\n      setNotification(`${error.message}`, 'danger', 5);\r\n    }\r\n  };\r\n\r\n  const handleFriendAdd = async id => {\r\n    try {\r\n      const afterAdd = await addFriend({\r\n        variables: {\r\n          id,\r\n        },\r\n      });\r\n\r\n      if (!afterAdd.loading) {\r\n        setNotification(`Friend added!`, 'success', 5);\r\n      }\r\n    } catch (error) {\r\n      setNotification(`${error.message}`, 'danger', 5);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    searchField.reset();\r\n    focus();\r\n  };\r\n\r\n  if (loading) return <LoadingIcon />;\r\n\r\n  if (data.allUsers === undefined || data.allUsers === null)\r\n    return (\r\n      <div style={{ minHeight: '100vh' }}>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Search with username: </Form.Label>\r\n            <Form.Control\r\n              ref={focusRef}\r\n              {...searchField}\r\n              reset={null}\r\n              placeholder=\"username\"\r\n            />\r\n          </Form.Group>\r\n          <Button onClick={() => handleClear()} variant=\"primary\">\r\n            Clear\r\n          </Button>\r\n        </Form>\r\n        <Container>\r\n          <Row>\r\n            <Col\r\n              style={{\r\n                textAlign: 'center',\r\n                marginTop: '5em',\r\n              }}\r\n            >\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n\r\n  if (me === null || me === undefined)\r\n    return (\r\n      <div style={{ minHeight: '100vh' }}>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Search with username: </Form.Label>\r\n            <Form.Control\r\n              ref={focusRef}\r\n              {...searchField}\r\n              reset={null}\r\n              placeholder=\"username\"\r\n            />\r\n          </Form.Group>\r\n          <Button onClick={() => handleClear()} variant=\"primary\">\r\n            Clear\r\n          </Button>\r\n        </Form>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Username</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {!loading &&\r\n              data.allUsers.map((usr, i) => (\r\n                <tr key={`${usr.username}-list`}>\r\n                  <td>{i + 1}</td>\r\n                  <td>\r\n                    <Link to={`/user/${usr.username}`}>{usr.username}</Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div style={{ minHeight: '100vh' }}>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Search with username: </Form.Label>\r\n          <Form.Control\r\n            ref={focusRef}\r\n            {...searchField}\r\n            reset={null}\r\n            placeholder=\"username\"\r\n          />\r\n        </Form.Group>\r\n        <Button onClick={() => handleClear()} variant=\"primary\">\r\n          Clear\r\n        </Button>\r\n      </Form>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Username</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {!loading &&\r\n            me.data !== null &&\r\n            data.allUsers\r\n              .filter(usr =>\r\n                usr.username\r\n                  .toLowerCase()\r\n                  .includes(searchField.value.toLowerCase())\r\n              )\r\n              .map((usr, i) => (\r\n                <tr key={`${usr.username}-list`}>\r\n                  <td>{i + 1}</td>\r\n                  <td>\r\n                    <Link to={`/user/${usr.username}`}>{usr.username}</Link>\r\n                  </td>\r\n                  {usr.friends !== null && me.username === usr.username ? (\r\n                    <>\r\n                      <td></td>\r\n                      <td></td>\r\n                    </>\r\n                  ) : me.friends.find(frd => frd.id === usr.id) ===\r\n                    undefined ? (\r\n                    <>\r\n                      <td>\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          onClick={() => handleFriendAdd(usr.id)}\r\n                        >\r\n                          Add friend\r\n                        </Button>\r\n                      </td>\r\n                      <td></td>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <td>\r\n                        <Button variant=\"secondary\" disabled>\r\n                          Remove\r\n                        </Button>\r\n                      </td>\r\n                      <td>\r\n                        <Button\r\n                          variant=\"secondary\"\r\n                          onClick={() => handleChat(me.id, usr.id)}\r\n                        >\r\n                          Chat\r\n                        </Button>\r\n                      </td>\r\n                    </>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserSearch.propTypes = {\r\n  user: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\r\n  setNotification: PropTypes.func.isRequired,\r\n  setUser: PropTypes.func.isRequired,\r\n  me: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\r\n  history: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setNotification,\r\n  setUser,\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(UserSearch)\r\n);\r\n","import React from 'react';\r\nimport { Col, Toast } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Message = ({ message, me, remove }) => {\r\n  const time = new Date(+message.date);\r\n\r\n  if (me.id === message.sender.id) {\r\n    return (\r\n      <>\r\n        <Col xs={{ order: 1 }} sm={{ order: 1 }}></Col>\r\n        <Col\r\n          className=\"p-1 pl-2\"\r\n          xs={{ order: 12, span: 8 }}\r\n          sm={{ order: 12, span: 8 }}\r\n        >\r\n          <Toast\r\n            style={{ maxWidth: '100%', overflow: 'auto' }}\r\n            onClose={() => remove(message.id)}\r\n          >\r\n            <Toast.Header>\r\n              <strong className=\"mr-auto\">{message.sender.username}</strong>\r\n              <small>{time.toLocaleString()}</small>\r\n            </Toast.Header>\r\n            <Toast.Body style={{ fontSize: '0.9rem', fontWeight: '200' }}>\r\n              {message.message}\r\n            </Toast.Body>\r\n          </Toast>\r\n        </Col>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Col\r\n        className=\"p-1\"\r\n        sm={{ order: 1, span: 8 }}\r\n        xs={{ order: 1, span: 8 }}\r\n      >\r\n        <Toast style={{ maxWidth: '100%', overflow: 'auto' }}>\r\n          <Toast.Header closeButton={false}>\r\n            <strong className=\"mr-auto\">{message.sender.username}</strong>\r\n            <small>{time.toLocaleString()}</small>\r\n          </Toast.Header>\r\n          <Toast.Body style={{ fontSize: '0.9rem', fontWeight: '200' }}>\r\n            {message.message}\r\n          </Toast.Body>\r\n        </Toast>\r\n      </Col>\r\n      <Col sm={{ order: 12 }} xs={{ order: 12 }}></Col>\r\n    </>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {\r\n  remove: PropTypes.func.isRequired,\r\n  message: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\r\n  me: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React, { useEffect } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Message from './Message';\r\n\r\nconst Messages = ({ scrollToMsg, messages, removeMessage, me }) => {\r\n  useEffect(() => {\r\n    scrollToMsg();\r\n  }, [scrollToMsg]);\r\n\r\n  return (\r\n    <Col className=\"p-3\">\r\n      {messages.map(msg => (\r\n        <Row key={msg.id}>\r\n          <Message me={me} message={msg} remove={removeMessage} />\r\n        </Row>\r\n      ))}\r\n    </Col>\r\n  );\r\n};\r\n\r\nMessages.propTypes = {\r\n  scrollToMsg: PropTypes.func.isRequired,\r\n  messages: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\r\n  removeMessage: PropTypes.func.isRequired,\r\n  me: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useQuery, useMutation, useSubscription } from '@apollo/react-hooks';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  Button,\r\n  FormControl,\r\n} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { setNotification } from '../reducers/notification';\r\nimport Messages from './Messages';\r\nimport LoadingIcon from './LoadingIcon';\r\n\r\nimport {\r\n  GET_CHATROOM_INFO,\r\n  SEND_MSG,\r\n  REMOVE_MESSAGE,\r\n  MESSAGE_SUBSCRIPTION,\r\n} from '../services/queries';\r\n\r\nconst ChatPage = ({ setNotification, match, me, client }) => {\r\n  const [msg, setMsg] = useState('');\r\n  const [update, setUpdate] = useState(true);\r\n\r\n  const scrollRef = React.useRef(null);\r\n\r\n  const scrollToMsg = useCallback(() => {\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n    }\r\n  }, []);\r\n\r\n  useSubscription(MESSAGE_SUBSCRIPTION, {\r\n    variables: {\r\n      id: match.params.id,\r\n    },\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      const {\r\n        data: { messageAdded },\r\n      } = subscriptionData;\r\n      const dataInStore = client.readQuery({\r\n        query: GET_CHATROOM_INFO,\r\n        variables: { id: match.params.id },\r\n      });\r\n\r\n      if (\r\n        !dataInStore.getChatroomInfo.messages\r\n          .map(msg => msg.id)\r\n          .includes(messageAdded.id)\r\n      ) {\r\n        dataInStore.getChatroomInfo = {\r\n          ...dataInStore.getChatroomInfo,\r\n          messages: dataInStore.getChatroomInfo.messages.concat(messageAdded),\r\n        };\r\n        client.writeQuery({\r\n          query: GET_CHATROOM_INFO,\r\n          variables: { id: match.params.id },\r\n          data: dataInStore,\r\n        });\r\n        scrollToMsg();\r\n      }\r\n    },\r\n  });\r\n  const [sendMsg] = useMutation(SEND_MSG);\r\n  const { data, error, loading } = useQuery(GET_CHATROOM_INFO, {\r\n    variables: {\r\n      id: match.params.id,\r\n    },\r\n  });\r\n  const [removeMessage] = useMutation(REMOVE_MESSAGE);\r\n\r\n  const handleRemoveMessage = async id => {\r\n    try {\r\n      const rm = await removeMessage({\r\n        variables: {\r\n          id,\r\n          room: match.params.id,\r\n        },\r\n      });\r\n\r\n      if (!rm.loading) {\r\n        const dataInStore = client.readQuery({\r\n          query: GET_CHATROOM_INFO,\r\n          variables: { id: match.params.id },\r\n        });\r\n\r\n        const idArr = dataInStore.getChatroomInfo.messages.map(msg => msg.id);\r\n\r\n        const idx = idArr.indexOf(id);\r\n\r\n        dataInStore.getChatroomInfo.messages.splice(idx, 1);\r\n\r\n        client.writeQuery({\r\n          query: GET_CHATROOM_INFO,\r\n          data: dataInStore,\r\n        });\r\n\r\n        setUpdate(!update);\r\n      }\r\n    } catch (error) {\r\n      setNotification(`The message couldn't be removed.`, 'danger', 5);\r\n    }\r\n  };\r\n\r\n  const handleMessage = async () => {\r\n    try {\r\n      const resp = await sendMsg({\r\n        variables: {\r\n          id: match.params.id,\r\n          message: msg,\r\n          senderId: me.id,\r\n        },\r\n      });\r\n\r\n      if (!resp.loading) {\r\n        const dataInStore = client.readQuery({\r\n          query: GET_CHATROOM_INFO,\r\n          variables: { id: match.params.id },\r\n        });\r\n        if (\r\n          !dataInStore.getChatroomInfo.messages\r\n            .map(msg => msg.id)\r\n            .includes(resp.data.sendMessage.id)\r\n        ) {\r\n          dataInStore.getChatroomInfo.messages = dataInStore.getChatroomInfo.messages.concat(\r\n            resp.data.sendMessage\r\n          );\r\n          client.writeQuery({\r\n            query: GET_CHATROOM_INFO,\r\n            data: dataInStore,\r\n          });\r\n        }\r\n        scrollToMsg();\r\n        setMsg('');\r\n      }\r\n    } catch (error) {\r\n      setNotification(`${error.message}`, 'danger', 5);\r\n    }\r\n  };\r\n\r\n  if (!me)\r\n    return (\r\n      <div style={{ minHeight: '100vh' }} className=\"container text-center\">\r\n        <div style={{ marginTop: '50px' }}>\r\n          <h4>\r\n            <u>Log in to use the SpaceX API!</u>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  if (loading) return <LoadingIcon />;\r\n\r\n  if (error) {\r\n    // Could show an image here.\r\n    return (\r\n      <div style={{ minHeight: '100vh' }}>{error.message.substring(14)}</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ minHeight: '80vh' }}>\r\n        <Container style={{ maxWidth: '50rem' }}>\r\n          <Row\r\n            className=\"d-flex rounded\"\r\n            style={{\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              paddingBottom: '20px',\r\n              marginTop: '20px',\r\n            }}\r\n          >\r\n            <Col className=\"text-center rounded\">\r\n              <div style={{ display: 'inline-block', float: 'left' }}>\r\n                <strong style={{ color: 'red' }}>\r\n                  {!loading &&\r\n                    me &&\r\n                    data.getChatroomInfo &&\r\n                    data.getChatroomInfo.users.map(user =>\r\n                      user.username !== me.username ? user.username : null\r\n                    )}\r\n                </strong>\r\n              </div>\r\n              <div style={{ display: 'inline-block' }}>\r\n                <h4>Chat</h4>\r\n              </div>\r\n              <div style={{ display: 'inline-block', float: 'right' }}>\r\n                <strong style={{ color: 'blue' }}>{me && me.username}</strong>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row\r\n            className=\"d-flex rounded\"\r\n            style={{\r\n              backgroundColor: '#d9d7d7',\r\n              overflowY: 'auto',\r\n              overflowX: 'hidden',\r\n              height: '60vh',\r\n              position: 'relative',\r\n              border: '0.5rem inset #c9a9a7',\r\n              marginTop: '0.5rem',\r\n            }}\r\n            ref={scrollRef}\r\n          >\r\n            {!loading && data.getChatroomInfo && (\r\n              <Messages\r\n                scrollToMsg={scrollToMsg}\r\n                messages={data.getChatroomInfo.messages}\r\n                removeMessage={handleRemoveMessage}\r\n                me={me}\r\n              />\r\n            )}\r\n          </Row>\r\n        </Container>\r\n        <InputGroup size=\"sm\" className=\"mt-4 sticky-bottom\">\r\n          <InputGroup.Prepend>\r\n            <Button onClick={() => handleMessage()}>Send:</Button>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            value={msg}\r\n            onChange={event => setMsg(event.target.value)}\r\n            as=\"textarea\"\r\n            style={{ resize: 'vertical', maxHeight: '10em', minHeight: '3rem' }}\r\n            aria-label=\"With textarea\"\r\n          />\r\n        </InputGroup>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nChatPage.propTypes = {\r\n  setNotification: PropTypes.func.isRequired,\r\n  match: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.func,\r\n    PropTypes.object,\r\n  ]).isRequired,\r\n  client: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.func,\r\n    PropTypes.object,\r\n  ]).isRequired,\r\n  me: PropTypes.oneOfType([PropTypes.array, PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nChatPage.defaultProps = {\r\n  me: undefined,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setNotification,\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    null,\r\n    mapDispatchToProps\r\n  )(ChatPage)\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Jumbotron,\r\n  Carousel,\r\n  Image,\r\n} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport nasa from '../util/img/nasa.jpg';\r\nimport impress from '../util/img/impress2.jpg';\r\nimport weather from '../util/img/weather.jpg';\r\n\r\nconst MainPage = ({ me }) => {\r\n  const [index, setIndex] = useState(0);\r\n  const [direction, setDirection] = useState(null);\r\n\r\n  useEffect(() => window.scrollTo(0, 0), []);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n    setDirection(e.direction);\r\n  };\r\n\r\n  /*\r\n\r\n  Image spreading example:\r\n\r\n  <div\r\n      style={{\r\n        backgroundImage: `url(${bg})`,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        minHeight: '100vh',\r\n      }}\r\n      className=\"mb-4\"\r\n    >\r\n\r\n    */\r\n\r\n  if (!me) {\r\n    return (\r\n      <div className=\"container text-center\" style={{ minHeight: '100vh' }}>\r\n        <Jumbotron className=\"pb-0 mb-0\">\r\n          <h1>Hey there! ;)</h1>\r\n          <p>Please log in to gain access to the services.</p>\r\n        </Jumbotron>\r\n        <div\r\n          className=\"rounded-circle\"\r\n          style={{\r\n            backgroundColor: 'black',\r\n            height: '10px',\r\n            width: '10px',\r\n            marginLeft: '50%',\r\n            marginBottom: '30px',\r\n            marginTop: '50px',\r\n          }}\r\n        />\r\n        <div\r\n          className=\"rounded-circle\"\r\n          style={{\r\n            backgroundColor: 'black',\r\n            height: '10px',\r\n            width: '10px',\r\n            marginLeft: '50%',\r\n            marginBottom: '30px',\r\n          }}\r\n        />\r\n        <div\r\n          className=\"rounded-circle\"\r\n          style={{\r\n            backgroundColor: 'black',\r\n            height: '10px',\r\n            width: '10px',\r\n            marginLeft: '50%',\r\n            marginBottom: '50px',\r\n          }}\r\n        />\r\n        <div>\r\n          <p>SpaceX API</p>\r\n          <p>Weather App</p>\r\n          <p>Chat...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"mt-3 p-4 fluid\" style={{ marginBottom: '50px' }}>\r\n        <Row>\r\n          <Col\r\n            className=\"p-3\"\r\n            style={{ marginBottom: '40px', borderBottom: '1px solid #bcceeb' }}\r\n          >\r\n            <h2>App Mashup!</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5>\r\n              Ever wanted one place with all the necessary tools to socialize,\r\n              be informed about weather and get knowledge about SpaceX missions?\r\n              Look no further!\r\n            </h5>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-4\">\r\n          <Col\r\n            className=\"d-flex mb-3\"\r\n            style={{ alignItems: 'center', justifyContent: 'center' }}\r\n          >\r\n            <ul>\r\n              <li>Socialize using the chat app.</li>\r\n              <li>Check out the weather forecast. World wide.</li>\r\n              <li>Space X -missions. The past and the future.</li>\r\n            </ul>\r\n          </Col>\r\n          <Col lg={6}>\r\n            <Carousel\r\n              activeIndex={index}\r\n              direction={direction}\r\n              onSelect={handleSelect}\r\n            >\r\n              <Carousel.Item>\r\n                <Image\r\n                  className=\"d-block w-100\"\r\n                  src={impress}\r\n                  alt=\"First slide\"\r\n                  style={{\r\n                    objectFit: 'cover',\r\n                    height: '15rem',\r\n                  }}\r\n                />\r\n                <Carousel.Caption>\r\n                  <h3>Chat like no tomorrow.</h3>\r\n                  <p>Limited to people on your friendlist.</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n              <Carousel.Item>\r\n                <Image\r\n                  className=\"d-block w-100\"\r\n                  src={nasa}\r\n                  alt=\"Second slide\"\r\n                  style={{ objectFit: 'cover', height: '15rem' }}\r\n                />\r\n                <Carousel.Caption>\r\n                  <h3>SPACE X -missions</h3>\r\n                  <p>List of upcoming flights.</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n              <Carousel.Item>\r\n                <Image\r\n                  className=\"d-block w-100\"\r\n                  src={weather}\r\n                  alt=\"Third slide\"\r\n                  style={{ objectFit: 'cover', height: '15rem' }}\r\n                />\r\n                <Carousel.Caption>\r\n                  <h3>Weather forecast</h3>\r\n                  <p>Make plans with precision.</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n            </Carousel>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainPage.propTypes = {\r\n  me: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n};\r\n\r\nMainPage.defaultProps = {\r\n  me: undefined,\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Col,\r\n  Row,\r\n  InputGroup,\r\n  FormControl,\r\n  Table,\r\n  Button,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Card,\r\n} from 'react-bootstrap';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { COUNTRIES, GET_WEATHER_DATA } from '../services/queries';\r\nimport LoadingIcon from './LoadingIcon';\r\n\r\nconst Weather = ({ me }) => {\r\n  const [val, setVal] = useState('');\r\n  const [forecast, setForecast] = useState(null);\r\n  const { data, loading, error } = useQuery(COUNTRIES);\r\n  const [weatherData] = useMutation(GET_WEATHER_DATA);\r\n\r\n  useEffect(() => window.scrollTo(0, 0), []);\r\n\r\n  const weatherRef = React.useRef(null);\r\n\r\n  const getCountryData = async (capital, country) => {\r\n    try {\r\n      const data = await weatherData({\r\n        variables: {\r\n          capital,\r\n        },\r\n      });\r\n      setForecast({\r\n        country,\r\n        weather: JSON.parse(data.data.getWeatherData.value),\r\n      });\r\n      if (window.innerWidth < 768) {\r\n        weatherRef.current.scrollIntoView({\r\n          block: 'center',\r\n          behavior: 'smooth',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setForecast(null);\r\n    }\r\n  };\r\n\r\n  if (!me)\r\n    return (\r\n      <div style={{ minHeight: '100vh' }} className=\"container text-center\">\r\n        <div style={{ marginTop: '50px' }}>\r\n          <h4>\r\n            <u>Log in to use the weather app!</u>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  if (loading) return <LoadingIcon />;\r\n\r\n  if (error) {\r\n    return <div>{error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container-fluid p-4 mt-4 mb-4\"\r\n        style={{ minHeight: '100vh' }}\r\n      >\r\n        <h2>Weather</h2>\r\n        <InputGroup style={{ paddingBottom: '25px' }}>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"basic-addon1\">Filter</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            placeholder=\"Country\"\r\n            aria-label=\"Country\"\r\n            aria-describedby=\"basic-addon1\"\r\n            value={val}\r\n            onChange={event => setVal(event.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <Row className=\"ml-0 mr-0\">\r\n          <Col\r\n            md={3}\r\n            xs={12}\r\n            className=\"rounded mb-3\"\r\n            style={{\r\n              overflow: 'auto',\r\n              fontSize: '0.75rem',\r\n              maxHeight: '60vh',\r\n              border: '1px solid rgb(188, 206, 235)',\r\n            }}\r\n          >\r\n            <Table className=\"mt-4\" striped>\r\n              <thead>\r\n                <tr>\r\n                  <th>Country</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {!loading &&\r\n                  data.getCountries\r\n                    .filter(country =>\r\n                      country.name.toLowerCase().includes(val.toLowerCase())\r\n                    )\r\n                    .map(c => (\r\n                      <tr key={`${c.name}`}>\r\n                        <td>\r\n                          <Button\r\n                            href=\"#\"\r\n                            role=\"button\"\r\n                            onClick={() => getCountryData(c.capital, c.name)}\r\n                            variant=\"link\"\r\n                          >\r\n                            {c.name}\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n          <Col\r\n            ref={weatherRef}\r\n            style={{ textAlign: 'center', float: 'left' }}\r\n            sm={12}\r\n            xs={12}\r\n            md={{ span: 8, offset: 1 }}\r\n            className=\"pr-0 pl-0\"\r\n          >\r\n            {forecast !== null && (\r\n              <div\r\n                style={{\r\n                  width: '100%',\r\n                  border: '1px rgb(188, 206, 235) solid',\r\n                }}\r\n                className=\"rounded\"\r\n              >\r\n                <h3 className=\"mt-3\">{forecast.country}</h3>\r\n                <p>\r\n                  <strong>Capital:</strong> {forecast.weather.location.name}\r\n                </p>\r\n                <Row className=\"pb-3\">\r\n                  {forecast.weather.forecast.forecastday.map(day => {\r\n                    const date = new Date(day.date_epoch * 1000);\r\n                    return (\r\n                      <Col\r\n                        sm={3}\r\n                        xs={12}\r\n                        key={`${day.date}`}\r\n                        className=\"mr-auto ml-auto pl-auto pr-auto mb-2 pb-auto\"\r\n                        style={{ maxWidth: '20rem' }}\r\n                      >\r\n                        <Card\r\n                          bg=\"info\"\r\n                          style={{\r\n                            width: '100%',\r\n                            height: '25rem',\r\n                            position: 'relative',\r\n                          }}\r\n                          className=\"text-center\"\r\n                        >\r\n                          <Card.Header as=\"h5\" style={{ color: 'white' }}>\r\n                            {date.toDateString().substring(0, 3)}\r\n                          </Card.Header>\r\n                          <div\r\n                            className=\"d-flex\"\r\n                            style={{ justifyContent: 'center' }}\r\n                          >\r\n                            {' '}\r\n                            <Card.Img\r\n                              variant=\"top\"\r\n                              src={day.day.condition.icon}\r\n                              alt={day.day.condition.text}\r\n                              title={day.day.condition.text}\r\n                              style={{ height: '70px', width: '70px' }}\r\n                            />\r\n                          </div>\r\n\r\n                          <Card.Body style={{ color: 'white' }}>\r\n                            <Card.Title>{`${date.getDate()}.${date.getMonth() +\r\n                              1}.${date.getFullYear()}`}</Card.Title>\r\n                            <Card.Text>{`${day.day.condition.text}`}</Card.Text>\r\n                          </Card.Body>\r\n                          <ListGroup\r\n                            className=\"list-group-flush\"\r\n                            style={{ fontSize: '0.7rem' }}\r\n                          >\r\n                            <ListGroupItem>\r\n                              <strong>Max: {day.day.maxtemp_c}&#8451;</strong>\r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                              <strong>Min: {day.day.mintemp_c}&#8451;</strong>\r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                              <strong>Avg: {day.day.avgtemp_c}&#8451;</strong>\r\n                            </ListGroupItem>\r\n                          </ListGroup>\r\n                        </Card>\r\n                      </Col>\r\n                    );\r\n                  })}\r\n                </Row>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nWeather.propTypes = {\r\n  me: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n};\r\n\r\nWeather.defaultProps = {\r\n  me: undefined,\r\n};\r\n\r\nexport default Weather;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Accordion, Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { GET_LAUNCH_DATA } from '../services/queries';\r\nimport rocket from '../util/img/rocket.png';\r\nimport LoadingIcon from './LoadingIcon';\r\n\r\nconst Space = ({ me }) => {\r\n  const [t, setT] = useState({});\r\n  const [filter, setFilter] = useState({\r\n    rocket: 'all',\r\n    order: 'desc',\r\n    scope: 'all',\r\n  });\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const {\r\n    data: { getLaunchData },\r\n    loading,\r\n  } = useQuery(GET_LAUNCH_DATA);\r\n\r\n  useEffect(() => {\r\n    return () => clearInterval(intervalId);\r\n  }, [intervalId]);\r\n\r\n  useEffect(() => window.scrollTo(0, 0), []);\r\n\r\n  const getTime = useCallback(\r\n    (launchDate, missionName, element) => {\r\n      if (missionName === t.missionName) {\r\n        clearInterval(intervalId);\r\n        setT({});\r\n      } else {\r\n        clearInterval(intervalId);\r\n        setT({});\r\n        const interval = setInterval(() => {\r\n          let now = new Date().getTime();\r\n          now /= 1000;\r\n          const distance = launchDate - now;\r\n\r\n          const days = Math.floor(distance / (60 * 60 * 24));\r\n          const hours = Math.floor((distance % (60 * 60 * 24)) / (60 * 60));\r\n          const minutes = Math.floor((distance % (60 * 60)) / 60);\r\n          const seconds = Math.floor(distance % 60);\r\n\r\n          if (distance > 0) {\r\n            setT({\r\n              time: `${days}d : ${hours}h : ${minutes}m : ${seconds}s`,\r\n              missionName,\r\n              element,\r\n              launchDate,\r\n            });\r\n          } else {\r\n            setT({\r\n              time: 'Expired',\r\n              missionName,\r\n              element,\r\n              launchDate,\r\n            });\r\n          }\r\n        }, 1000);\r\n\r\n        setIntervalId(interval);\r\n      }\r\n\r\n      return null;\r\n    },\r\n    [intervalId, t]\r\n  );\r\n\r\n  const filterMissions = useCallback(() => {\r\n    let missions = [];\r\n\r\n    if (filter.scope === 'all') {\r\n      missions = JSON.parse(getLaunchData.value);\r\n    } else {\r\n      missions = JSON.parse(getLaunchData.value).filter(msn => msn.upcoming);\r\n    }\r\n\r\n    if (filter.rocket !== 'all') {\r\n      missions = missions.filter(\r\n        msn => msn.rocket.rocket_name === filter.rocket\r\n      );\r\n    }\r\n\r\n    if (filter.order === 'desc') {\r\n      return missions.sort((a, b) => a.launch_date_unix - b.launch_date_unix);\r\n    }\r\n\r\n    return missions.sort((a, b) => b.launch_date_unix - a.launch_date_unix);\r\n  }, [filter, getLaunchData]);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      const openCard = filterMissions();\r\n      if (openCard[t.element] !== undefined) {\r\n        getTime(\r\n          openCard[t.element].launch_date_unix,\r\n          openCard[t.element].mission_name,\r\n          t.element\r\n        );\r\n      }\r\n    }\r\n  }, [filter, t, getTime, loading, filterMissions]);\r\n\r\n  if (!me)\r\n    return (\r\n      <div style={{ minHeight: '100vh' }} className=\"container text-center\">\r\n        <div style={{ marginTop: '50px' }}>\r\n          <h4>\r\n            <u>Log in to use the SpaceX API!</u>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  if (loading) {\r\n    return <LoadingIcon />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container pt-4 mt-4\" style={{ minHeight: '100vh' }}>\r\n      <h2 className=\"pb-3 mb-3\" style={{ textAlign: 'center' }}>\r\n        Space X Missions\r\n      </h2>\r\n      <Container className=\"mb-4\">\r\n        <Row>\r\n          <Col xs={12} sm={12} md={4}>\r\n            Rocket:\r\n            <select\r\n              style={{ width: '100%' }}\r\n              onChange={event =>\r\n                setFilter({ ...filter, rocket: event.target.value })\r\n              }\r\n            >\r\n              <option value=\"all\">All</option>\r\n              {!loading &&\r\n                JSON.parse(getLaunchData.value)\r\n                  .map(mis => mis.rocket.rocket_name)\r\n                  .filter((v, i, a) => a.indexOf(v) === i)\r\n                  .map(rname => (\r\n                    <option key={rname} value={rname}>\r\n                      {rname}\r\n                    </option>\r\n                  ))}\r\n            </select>\r\n          </Col>\r\n          <Col xs={12} md={4} sm={12}>\r\n            Order:\r\n            <select\r\n              style={{ width: '100%' }}\r\n              onChange={event =>\r\n                setFilter({ ...filter, order: event.target.value })\r\n              }\r\n            >\r\n              <option value=\"desc\">Descending</option>\r\n              <option value=\"asc\">Ascending</option>\r\n            </select>\r\n          </Col>\r\n          <Col xs={12} sm={12} md={4}>\r\n            Scope:\r\n            <select\r\n              style={{ width: '100%' }}\r\n              onChange={event =>\r\n                setFilter({ ...filter, scope: event.target.value })\r\n              }\r\n            >\r\n              <option value=\"all\">All</option>\r\n              <option value=\"upcoming\">Upcoming</option>\r\n            </select>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Accordion>\r\n        {!loading &&\r\n          filterMissions().map((launch, i) => (\r\n            <Card key={`${launch.mission_name}`}>\r\n              <Accordion.Toggle\r\n                as={Card.Header}\r\n                eventKey={`${i}`}\r\n                onClick={() =>\r\n                  getTime(launch.launch_date_unix, launch.mission_name, i)\r\n                }\r\n              >\r\n                {launch.mission_name}{' '}\r\n                <div style={{ float: 'right' }}>\r\n                  {launch.launch_date_utc.substring(0, 10)}\r\n                </div>\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey={`${i}`}>\r\n                <Card.Body>\r\n                  <h4 style={{ textAlign: 'center' }}>Mission details</h4>\r\n                  <Container className=\"pt-3\">\r\n                    <Row>\r\n                      <Col\r\n                        sm={{ span: 12, order: 2 }}\r\n                        md={{ order: 1, span: 8 }}\r\n                        xs={{ span: 12, order: 2 }}\r\n                      >\r\n                        <dl>\r\n                          <dt>Description</dt>\r\n                          {launch.details ? (\r\n                            <dd>{launch.details}</dd>\r\n                          ) : (\r\n                            <dd>TBA</dd>\r\n                          )}\r\n                          <dt>Rocket</dt>\r\n                          {launch.rocket.rocket_id ? (\r\n                            <dd>{launch.rocket.rocket_name}</dd>\r\n                          ) : (\r\n                            <dd>TBA</dd>\r\n                          )}\r\n                          <dt>Launch site</dt>\r\n                          {launch.launch_site.site_id ? (\r\n                            <dd>{launch.launch_site.site_name_long}</dd>\r\n                          ) : (\r\n                            <dd>TBA</dd>\r\n                          )}\r\n                          <dt>Countdown</dt>\r\n                          <dd>{t.time}</dd>\r\n                        </dl>\r\n                      </Col>\r\n                      <Col\r\n                        xs={{ order: 1, span: 12 }}\r\n                        sm={{ order: 1, span: 12 }}\r\n                        md={{ order: 2 }}\r\n                        className=\"pb-3 text-center\"\r\n                      >\r\n                        <img\r\n                          src={rocket}\r\n                          alt=\"rocket\"\r\n                          style={{ height: '10rem' }}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          ))}\r\n        {!loading && filterMissions().length === 0 && (\r\n          <div className=\"text-center mt-5 pt-5\">\r\n            <strong>No matches</strong>\r\n          </div>\r\n        )}\r\n      </Accordion>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpace.propTypes = {\r\n  me: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n};\r\n\r\nSpace.defaultProps = {\r\n  me: undefined,\r\n};\r\n\r\nexport default withRouter(Space);\r\n","import React from 'react';\r\nimport { Container, Col, Row, Card, Button } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ServiceChoice = ({ history }) => {\r\n  const handleClick = val => {\r\n    switch (val) {\r\n      case 'impress':\r\n        history.push('/s/users');\r\n        break;\r\n      case 'space':\r\n        history.push('/service/space');\r\n        break;\r\n      case 'weather':\r\n        history.push('/service/weather');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"p-4 fluid\" style={{ marginBottom: '80px' }}>\r\n      <Row>\r\n        <Col md={4} xs={12} className=\"d-flex align-items-stretch mb-3\">\r\n          <Card bg=\"success\" style={{ width: '100%', position: 'relative' }}>\r\n            <Card.Header>Chat Application</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Socialize</Card.Title>\r\n              <Card.Text as=\"div\">\r\n                <p className=\"p-0 m-0\">Find people.</p>\r\n                <p className=\"p-0 m-0\">Add them to your friendlist.</p>\r\n                <p>Chat away!</p>\r\n              </Card.Text>\r\n              <Button variant=\"primary\" onClick={() => handleClick('impress')}>\r\n                Chat App\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4} xs={12} className=\"d-flex align-items-stretch mb-3\">\r\n          <Card\r\n            bg=\"info\"\r\n            text=\"white\"\r\n            style={{ width: '100%', position: 'relative' }}\r\n          >\r\n            <Card.Header>Weather Application</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Weather</Card.Title>\r\n              <Card.Text>\r\n                Choose the desired country. The app shows the weather forecast\r\n                of the country&apos;s capital city.\r\n              </Card.Text>\r\n              <Button variant=\"primary\" onClick={() => handleClick('weather')}>\r\n                Weather App\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4} xs={12} className=\"d-flex align-items-stretch mb-3\">\r\n          <Card bg=\"secondary\" style={{ width: '100%', position: 'relative' }}>\r\n            <Card.Header>SpaceX API</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>SPACE X -missions</Card.Title>\r\n              <Card.Text>\r\n                Check out all the SpaceX -missions that have happened or will\r\n                happen.\r\n              </Card.Text>\r\n              <Button variant=\"primary\" onClick={() => handleClick('space')}>\r\n                SpaceX API\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nServiceChoice.propTypes = {\r\n  history: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\r\n};\r\n\r\nexport default withRouter(ServiceChoice);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Alert, Image } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { useQuery, useApolloClient } from '@apollo/react-hooks';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { setUser } from './reducers/user';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport UserPage from './components/UserPage';\r\nimport UserSearch from './components/UserSearch';\r\nimport ChatPage from './components/ChatPage';\r\nimport { ME } from './services/queries';\r\nimport MainPage from './components/MainPage';\r\nimport Weather from './components/Weather';\r\nimport Space from './components/Space';\r\nimport ServiceChoice from './components/ServiceChoice';\r\nimport pic1 from './util/img/1.jpg';\r\nimport './css/index.css';\r\n\r\nconst App = ({ notification, setUser }) => {\r\n  const client = useApolloClient();\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(window.localStorage.getItem('loggedUser'));\r\n    if (user) {\r\n      setUser(user);\r\n    }\r\n  }, [setUser]);\r\n\r\n  const check = useQuery(ME);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Header user={check.data.me} client={client} />\r\n        {notification.text !== undefined && (\r\n          <Alert className=\"mb-0\" variant={notification.style}>\r\n            {notification.text}\r\n          </Alert>\r\n        )}\r\n        <div>\r\n          <Route\r\n            exact\r\n            path=\"/user/:username\"\r\n            render={({ match }) => {\r\n              return <UserPage foo={match} me={check.data.me} />;\r\n            }}\r\n          />\r\n          <Route\r\n            path=\"/s/users\"\r\n            render={() => <UserSearch me={check.data.me} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return (\r\n                <>\r\n                  <MainPage me={check.data.me} client={client} />\r\n                  {check.data.me && (\r\n                    <>\r\n                      <div style={{ marginBottom: '50px' }}>\r\n                        <Image\r\n                          src={pic1}\r\n                          style={{\r\n                            width: '100%',\r\n                            height: '50vh',\r\n                            objectFit: 'cover',\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <ServiceChoice />\r\n                    </>\r\n                  )}\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/chat/:id\"\r\n            render={({ match }) => (\r\n              <ChatPage me={check.data.me} match={match} client={client} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/service/weather\"\r\n            render={() => <Weather me={check.data.me} client={client} />}\r\n          />\r\n          <Route\r\n            path=\"/service/space\"\r\n            render={() => <Space me={check.data.me} />}\r\n          />\r\n        </div>\r\n      </Router>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    notification: state.notification,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setUser,\r\n};\r\n\r\nApp.propTypes = {\r\n  notification: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\r\n    .isRequired,\r\n  setUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport store from './store';\r\nimport client from './apollo';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo2.0a19e842.jpg\";"],"sourceRoot":""}